   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TFC_ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	PotADC_Value,4,4
  18              		.comm	HBridge_Value,4,4
  19              		.comm	BatSenseADC_Value,2,2
  20              		.section	.bss.CurrentADC_State,"aw",%nobits
  23              	CurrentADC_State:
  24 0000 00       		.space	1
  25              		.global	CurrentLineScanPixel
  26              		.section	.bss.CurrentLineScanPixel,"aw",%nobits
  29              	CurrentLineScanPixel:
  30 0000 00       		.space	1
  31              		.global	CurrentLineScanChannel
  32              		.section	.bss.CurrentLineScanChannel,"aw",%nobits
  35              	CurrentLineScanChannel:
  36 0000 00       		.space	1
  37              		.section	.text.ADC_Cal,"ax",%progbits
  38              		.align	2
  39              		.global	ADC_Cal
  40              		.code	16
  41              		.thumb_func
  43              	ADC_Cal:
  44              	.LFB0:
  45              		.file 1 "../Sources/TFC/TFC_ADC.c"
   1:../Sources/TFC/TFC_ADC.c **** #include "TFC\TFC.h"
   2:../Sources/TFC/TFC_ADC.c **** 
   3:../Sources/TFC/TFC_ADC.c **** 
   4:../Sources/TFC/TFC_ADC.c **** #define TFC_POT_0_ADC_CHANNEL		13
   5:../Sources/TFC/TFC_ADC.c **** #define TFC_POT_1_ADC_CHANNEL		12
   6:../Sources/TFC/TFC_ADC.c **** #define TFC_HBRIDGE_FB_A_ADC_CHANNEL		7
   7:../Sources/TFC/TFC_ADC.c **** #define TFC_HBRIDGE_FB_B_ADC_CHANNEL		3
   8:../Sources/TFC/TFC_ADC.c **** 
   9:../Sources/TFC/TFC_ADC.c **** #define TFC_BAT_SENSE_CHANNEL		4
  10:../Sources/TFC/TFC_ADC.c **** #define TFC_LINESCAN0_ADC_CHANNEL	6
  11:../Sources/TFC/TFC_ADC.c **** #define TFC_LINESCAN1_ADC_CHANNEL	7
  12:../Sources/TFC/TFC_ADC.c **** 
  13:../Sources/TFC/TFC_ADC.c **** #define ADC_MAX_CODE    (4095)
  14:../Sources/TFC/TFC_ADC.c **** 
  15:../Sources/TFC/TFC_ADC.c **** #define ADC0_irq_no   57
  16:../Sources/TFC/TFC_ADC.c **** #define ADC1_irq_no   58
  17:../Sources/TFC/TFC_ADC.c **** 
  18:../Sources/TFC/TFC_ADC.c **** #define ADC0_CHANA    19                                    // set to desired ADC0 channel trigger 
  19:../Sources/TFC/TFC_ADC.c **** #define ADC0_CHANB    20                                    // set to desired ADC0 channel trigger 
  20:../Sources/TFC/TFC_ADC.c **** 
  21:../Sources/TFC/TFC_ADC.c **** #define ADC1_CHANA    20                                    // set to desired ADC1 channel trigger 
  22:../Sources/TFC/TFC_ADC.c **** #define ADC1_CHANB    20                                    // set to desired ADC1 channel trigger 
  23:../Sources/TFC/TFC_ADC.c **** 
  24:../Sources/TFC/TFC_ADC.c **** #define ADC0_DLYA     0x2000                                // ADC0 trigger A delay 
  25:../Sources/TFC/TFC_ADC.c **** #define ADC0_DLYB     0x4000                                // ADC0 trigger B delay 
  26:../Sources/TFC/TFC_ADC.c **** #define ADC1_DLYA     0x6000                                // ADC1 trigger A delay
  27:../Sources/TFC/TFC_ADC.c **** #define ADC1_DLYB     0x7fff                                // ADC1 trigger B delay 
  28:../Sources/TFC/TFC_ADC.c **** 
  29:../Sources/TFC/TFC_ADC.c **** 
  30:../Sources/TFC/TFC_ADC.c **** #define ADC0A_DONE   0x01       
  31:../Sources/TFC/TFC_ADC.c **** #define ADC0B_DONE   0x02       
  32:../Sources/TFC/TFC_ADC.c **** #define ADC1A_DONE   0x04       
  33:../Sources/TFC/TFC_ADC.c **** #define ADC1B_DONE   0x08       
  34:../Sources/TFC/TFC_ADC.c **** 
  35:../Sources/TFC/TFC_ADC.c **** 
  36:../Sources/TFC/TFC_ADC.c **** // Bit shifting of bitfiled is already taken into account so 
  37:../Sources/TFC/TFC_ADC.c **** // bitfiled values are always represented as relative to their position.
  38:../Sources/TFC/TFC_ADC.c ****   
  39:../Sources/TFC/TFC_ADC.c **** /************************* #Defines ******************************************/
  40:../Sources/TFC/TFC_ADC.c **** 
  41:../Sources/TFC/TFC_ADC.c **** 
  42:../Sources/TFC/TFC_ADC.c **** #define A                 0x0
  43:../Sources/TFC/TFC_ADC.c **** #define B                 0x1
  44:../Sources/TFC/TFC_ADC.c **** 
  45:../Sources/TFC/TFC_ADC.c **** 
  46:../Sources/TFC/TFC_ADC.c **** /////// NOTE: the following defines relate to the ADC register definitions
  47:../Sources/TFC/TFC_ADC.c **** /////// and the content follows the reference manual, using the same symbols.
  48:../Sources/TFC/TFC_ADC.c **** 
  49:../Sources/TFC/TFC_ADC.c **** 
  50:../Sources/TFC/TFC_ADC.c **** //// ADCSC1 (register)
  51:../Sources/TFC/TFC_ADC.c **** 
  52:../Sources/TFC/TFC_ADC.c **** // Conversion Complete (COCO) mask
  53:../Sources/TFC/TFC_ADC.c **** #define COCO_COMPLETE     ADC_SC1_COCO_MASK
  54:../Sources/TFC/TFC_ADC.c **** #define COCO_NOT          0x00
  55:../Sources/TFC/TFC_ADC.c **** 
  56:../Sources/TFC/TFC_ADC.c **** // ADC interrupts: enabled, or disabled.
  57:../Sources/TFC/TFC_ADC.c **** #define AIEN_ON           ADC_SC1_AIEN_MASK
  58:../Sources/TFC/TFC_ADC.c **** #define AIEN_OFF          0x00
  59:../Sources/TFC/TFC_ADC.c **** 
  60:../Sources/TFC/TFC_ADC.c **** // Differential or Single ended ADC input
  61:../Sources/TFC/TFC_ADC.c **** #define DIFF_SINGLE       0x00
  62:../Sources/TFC/TFC_ADC.c **** #define DIFF_DIFFERENTIAL ADC_SC1_DIFF_MASK
  63:../Sources/TFC/TFC_ADC.c **** 
  64:../Sources/TFC/TFC_ADC.c **** //// ADCCFG1
  65:../Sources/TFC/TFC_ADC.c **** 
  66:../Sources/TFC/TFC_ADC.c **** // Power setting of ADC
  67:../Sources/TFC/TFC_ADC.c **** #define ADLPC_LOW         ADC_CFG1_ADLPC_MASK
  68:../Sources/TFC/TFC_ADC.c **** #define ADLPC_NORMAL      0x00
  69:../Sources/TFC/TFC_ADC.c **** 
  70:../Sources/TFC/TFC_ADC.c **** // Clock divisor
  71:../Sources/TFC/TFC_ADC.c **** #define ADIV_1            0x00
  72:../Sources/TFC/TFC_ADC.c **** #define ADIV_2            0x01
  73:../Sources/TFC/TFC_ADC.c **** #define ADIV_4            0x02
  74:../Sources/TFC/TFC_ADC.c **** #define ADIV_8            0x03
  75:../Sources/TFC/TFC_ADC.c **** 
  76:../Sources/TFC/TFC_ADC.c **** // Long samle time, or Short sample time
  77:../Sources/TFC/TFC_ADC.c **** #define ADLSMP_LONG       ADC_CFG1_ADLSMP_MASK
  78:../Sources/TFC/TFC_ADC.c **** #define ADLSMP_SHORT      0x00
  79:../Sources/TFC/TFC_ADC.c **** 
  80:../Sources/TFC/TFC_ADC.c **** // How many bits for the conversion?  8, 12, 10, or 16 (single ended).
  81:../Sources/TFC/TFC_ADC.c **** #define MODE_8            0x00
  82:../Sources/TFC/TFC_ADC.c **** #define MODE_12           0x01
  83:../Sources/TFC/TFC_ADC.c **** #define MODE_10           0x02
  84:../Sources/TFC/TFC_ADC.c **** #define MODE_16           0x03
  85:../Sources/TFC/TFC_ADC.c **** 
  86:../Sources/TFC/TFC_ADC.c **** 
  87:../Sources/TFC/TFC_ADC.c **** 
  88:../Sources/TFC/TFC_ADC.c **** // ADC Input Clock Source choice? Bus clock, Bus clock/2, "altclk", or the 
  89:../Sources/TFC/TFC_ADC.c **** //                                ADC's own asynchronous clock for less noise
  90:../Sources/TFC/TFC_ADC.c **** #define ADICLK_BUS        0x00
  91:../Sources/TFC/TFC_ADC.c **** #define ADICLK_BUS_2      0x01
  92:../Sources/TFC/TFC_ADC.c **** #define ADICLK_ALTCLK     0x02
  93:../Sources/TFC/TFC_ADC.c **** #define ADICLK_ADACK      0x03
  94:../Sources/TFC/TFC_ADC.c **** 
  95:../Sources/TFC/TFC_ADC.c **** //// ADCCFG2
  96:../Sources/TFC/TFC_ADC.c **** 
  97:../Sources/TFC/TFC_ADC.c **** // Select between B or A channels
  98:../Sources/TFC/TFC_ADC.c **** #define MUXSEL_ADCB       ADC_CFG2_MUXSEL_MASK
  99:../Sources/TFC/TFC_ADC.c **** #define MUXSEL_ADCA       0x00
 100:../Sources/TFC/TFC_ADC.c **** 
 101:../Sources/TFC/TFC_ADC.c **** // Ansync clock output enable: enable, or disable the output of it
 102:../Sources/TFC/TFC_ADC.c **** #define ADACKEN_ENABLED   ADC_CFG2_ADACKEN_MASK
 103:../Sources/TFC/TFC_ADC.c **** #define ADACKEN_DISABLED  0x00
 104:../Sources/TFC/TFC_ADC.c **** 
 105:../Sources/TFC/TFC_ADC.c **** // High speed or low speed conversion mode
 106:../Sources/TFC/TFC_ADC.c **** #define ADHSC_HISPEED     ADC_CFG2_ADHSC_MASK
 107:../Sources/TFC/TFC_ADC.c **** #define ADHSC_NORMAL      0x00
 108:../Sources/TFC/TFC_ADC.c **** 
 109:../Sources/TFC/TFC_ADC.c **** // Long Sample Time selector: 20, 12, 6, or 2 extra clocks for a longer sample time
 110:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_20          0x00
 111:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_12          0x01
 112:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_6           0x02
 113:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_2           0x03
 114:../Sources/TFC/TFC_ADC.c **** 
 115:../Sources/TFC/TFC_ADC.c **** ////ADCSC2
 116:../Sources/TFC/TFC_ADC.c **** 
 117:../Sources/TFC/TFC_ADC.c **** // Read-only status bit indicating conversion status
 118:../Sources/TFC/TFC_ADC.c **** #define ADACT_ACTIVE       ADC_SC2_ADACT_MASK
 119:../Sources/TFC/TFC_ADC.c **** #define ADACT_INACTIVE     0x00
 120:../Sources/TFC/TFC_ADC.c **** 
 121:../Sources/TFC/TFC_ADC.c **** // Trigger for starting conversion: Hardware trigger, or software trigger.
 122:../Sources/TFC/TFC_ADC.c **** // For using PDB, the Hardware trigger option is selected.
 123:../Sources/TFC/TFC_ADC.c **** #define ADTRG_HW           ADC_SC2_ADTRG_MASK
 124:../Sources/TFC/TFC_ADC.c **** #define ADTRG_SW           0x00
 125:../Sources/TFC/TFC_ADC.c **** 
 126:../Sources/TFC/TFC_ADC.c **** // ADC Compare Function Enable: Disabled, or Enabled.
 127:../Sources/TFC/TFC_ADC.c **** #define ACFE_DISABLED      0x00
 128:../Sources/TFC/TFC_ADC.c **** #define ACFE_ENABLED       ADC_SC2_ACFE_MASK
 129:../Sources/TFC/TFC_ADC.c **** 
 130:../Sources/TFC/TFC_ADC.c **** // Compare Function Greater Than Enable: Greater, or Less.
 131:../Sources/TFC/TFC_ADC.c **** #define ACFGT_GREATER      ADC_SC2_ACFGT_MASK
 132:../Sources/TFC/TFC_ADC.c **** #define ACFGT_LESS         0x00
 133:../Sources/TFC/TFC_ADC.c **** 
 134:../Sources/TFC/TFC_ADC.c **** // Compare Function Range Enable: Enabled or Disabled.
 135:../Sources/TFC/TFC_ADC.c **** #define ACREN_ENABLED      ADC_SC2_ACREN_MASK
 136:../Sources/TFC/TFC_ADC.c **** #define ACREN_DISABLED     0x00
 137:../Sources/TFC/TFC_ADC.c **** 
 138:../Sources/TFC/TFC_ADC.c **** // DMA enable: enabled or disabled.
 139:../Sources/TFC/TFC_ADC.c **** #define DMAEN_ENABLED      ADC_SC2_DMAEN_MASK
 140:../Sources/TFC/TFC_ADC.c **** #define DMAEN_DISABLED     0x00
 141:../Sources/TFC/TFC_ADC.c **** 
 142:../Sources/TFC/TFC_ADC.c **** // Voltage Reference selection for the ADC conversions
 143:../Sources/TFC/TFC_ADC.c **** // (***not*** the PGA which uses VREFO only).
 144:../Sources/TFC/TFC_ADC.c **** // VREFH and VREFL (0) , or VREFO (1).
 145:../Sources/TFC/TFC_ADC.c **** 
 146:../Sources/TFC/TFC_ADC.c **** #define REFSEL_EXT         0x00
 147:../Sources/TFC/TFC_ADC.c **** #define REFSEL_ALT         0x01
 148:../Sources/TFC/TFC_ADC.c **** #define REFSEL_RES         0x02     /* reserved */
 149:../Sources/TFC/TFC_ADC.c **** #define REFSEL_RES_EXT     0x03     /* reserved but defaults to Vref */
 150:../Sources/TFC/TFC_ADC.c **** 
 151:../Sources/TFC/TFC_ADC.c **** ////ADCSC3
 152:../Sources/TFC/TFC_ADC.c **** 
 153:../Sources/TFC/TFC_ADC.c **** // Calibration begin or off
 154:../Sources/TFC/TFC_ADC.c **** #define CAL_BEGIN          ADC_SC3_CAL_MASK
 155:../Sources/TFC/TFC_ADC.c **** #define CAL_OFF            0x00
 156:../Sources/TFC/TFC_ADC.c **** 
 157:../Sources/TFC/TFC_ADC.c **** // Status indicating Calibration failed, or normal success
 158:../Sources/TFC/TFC_ADC.c **** #define CALF_FAIL          ADC_SC3_CALF_MASK
 159:../Sources/TFC/TFC_ADC.c **** #define CALF_NORMAL        0x00
 160:../Sources/TFC/TFC_ADC.c **** 
 161:../Sources/TFC/TFC_ADC.c **** // ADC to continously convert, or do a sinle conversion
 162:../Sources/TFC/TFC_ADC.c **** #define ADCO_CONTINUOUS    ADC_SC3_ADCO_MASK
 163:../Sources/TFC/TFC_ADC.c **** #define ADCO_SINGLE        0x00
 164:../Sources/TFC/TFC_ADC.c **** 
 165:../Sources/TFC/TFC_ADC.c **** // Averaging enabled in the ADC, or not.
 166:../Sources/TFC/TFC_ADC.c **** #define AVGE_ENABLED       ADC_SC3_AVGE_MASK
 167:../Sources/TFC/TFC_ADC.c **** #define AVGE_DISABLED      0x00
 168:../Sources/TFC/TFC_ADC.c **** 
 169:../Sources/TFC/TFC_ADC.c **** // How many to average prior to "interrupting" the MCU?  4, 8, 16, or 32
 170:../Sources/TFC/TFC_ADC.c **** #define AVGS_4             0x00
 171:../Sources/TFC/TFC_ADC.c **** #define AVGS_8             0x01
 172:../Sources/TFC/TFC_ADC.c **** #define AVGS_16            0x02
 173:../Sources/TFC/TFC_ADC.c **** #define AVGS_32            0x03
 174:../Sources/TFC/TFC_ADC.c **** 
 175:../Sources/TFC/TFC_ADC.c **** ////PGA
 176:../Sources/TFC/TFC_ADC.c **** 
 177:../Sources/TFC/TFC_ADC.c **** // PGA enabled or not?
 178:../Sources/TFC/TFC_ADC.c **** #define PGAEN_ENABLED      ADC_PGA_PGAEN_MASK
 179:../Sources/TFC/TFC_ADC.c **** #define PGAEN_DISABLED     0x00 
 180:../Sources/TFC/TFC_ADC.c **** 
 181:../Sources/TFC/TFC_ADC.c **** // Chopper stabilization of the amplifier, or not.
 182:../Sources/TFC/TFC_ADC.c **** #define PGACHP_CHOP        ADC_PGA_PGACHP_MASK 
 183:../Sources/TFC/TFC_ADC.c **** #define PGACHP_NOCHOP      0x00
 184:../Sources/TFC/TFC_ADC.c **** 
 185:../Sources/TFC/TFC_ADC.c **** // PGA in low power mode, or normal mode.
 186:../Sources/TFC/TFC_ADC.c **** #define PGALP_LOW          ADC_PGA_PGALP_MASK
 187:../Sources/TFC/TFC_ADC.c **** #define PGALP_NORMAL       0x00
 188:../Sources/TFC/TFC_ADC.c **** 
 189:../Sources/TFC/TFC_ADC.c **** // Gain of PGA.  Selectable from 1 to 64.
 190:../Sources/TFC/TFC_ADC.c **** #define PGAG_1             0x00
 191:../Sources/TFC/TFC_ADC.c **** #define PGAG_2             0x01
 192:../Sources/TFC/TFC_ADC.c **** #define PGAG_4             0x02
 193:../Sources/TFC/TFC_ADC.c **** #define PGAG_8             0x03
 194:../Sources/TFC/TFC_ADC.c **** #define PGAG_16            0x04
 195:../Sources/TFC/TFC_ADC.c **** #define PGAG_32            0x05
 196:../Sources/TFC/TFC_ADC.c **** #define PGAG_64            0x06
 197:../Sources/TFC/TFC_ADC.c **** 
 198:../Sources/TFC/TFC_ADC.c **** /////////// The above values fit into the structure below to select ADC/PGA
 199:../Sources/TFC/TFC_ADC.c **** /////////// configuration desired:
 200:../Sources/TFC/TFC_ADC.c **** 
 201:../Sources/TFC/TFC_ADC.c **** typedef struct adc_cfg {
 202:../Sources/TFC/TFC_ADC.c ****   uint8_t  CONFIG1; 
 203:../Sources/TFC/TFC_ADC.c ****   uint8_t  CONFIG2; 
 204:../Sources/TFC/TFC_ADC.c ****   uint16_t COMPARE1; 
 205:../Sources/TFC/TFC_ADC.c ****   uint16_t COMPARE2; 
 206:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS2;
 207:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS3; 
 208:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS1A; 
 209:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS1B;
 210:../Sources/TFC/TFC_ADC.c ****   uint32_t PGA;
 211:../Sources/TFC/TFC_ADC.c ****   } *tADC_ConfigPtr, tADC_Config ;  
 212:../Sources/TFC/TFC_ADC.c ****   
 213:../Sources/TFC/TFC_ADC.c **** 
 214:../Sources/TFC/TFC_ADC.c **** #define CAL_BLK_NUMREC 18 
 215:../Sources/TFC/TFC_ADC.c **** 
 216:../Sources/TFC/TFC_ADC.c **** typedef struct adc_cal {
 217:../Sources/TFC/TFC_ADC.c ****  
 218:../Sources/TFC/TFC_ADC.c **** uint16_t  OFS;
 219:../Sources/TFC/TFC_ADC.c **** uint16_t  PG;
 220:../Sources/TFC/TFC_ADC.c **** uint16_t  MG;
 221:../Sources/TFC/TFC_ADC.c **** uint8_t   CLPD;
 222:../Sources/TFC/TFC_ADC.c **** uint8_t   CLPS;
 223:../Sources/TFC/TFC_ADC.c **** uint16_t  CLP4;
 224:../Sources/TFC/TFC_ADC.c **** uint16_t  CLP3;
 225:../Sources/TFC/TFC_ADC.c **** uint8_t   CLP2;
 226:../Sources/TFC/TFC_ADC.c **** uint8_t   CLP1;
 227:../Sources/TFC/TFC_ADC.c **** uint8_t   CLP0;
 228:../Sources/TFC/TFC_ADC.c **** uint8_t   dummy;
 229:../Sources/TFC/TFC_ADC.c **** uint8_t   CLMD;
 230:../Sources/TFC/TFC_ADC.c **** uint8_t   CLMS;
 231:../Sources/TFC/TFC_ADC.c **** uint16_t  CLM4;
 232:../Sources/TFC/TFC_ADC.c **** uint16_t  CLM3;
 233:../Sources/TFC/TFC_ADC.c **** uint8_t   CLM2;
 234:../Sources/TFC/TFC_ADC.c **** uint8_t   CLM1;
 235:../Sources/TFC/TFC_ADC.c **** uint8_t   CLM0;
 236:../Sources/TFC/TFC_ADC.c **** } tADC_Cal_Blk ;  
 237:../Sources/TFC/TFC_ADC.c **** 
 238:../Sources/TFC/TFC_ADC.c **** 
 239:../Sources/TFC/TFC_ADC.c **** // function prototypes:
 240:../Sources/TFC/TFC_ADC.c **** 
 241:../Sources/TFC/TFC_ADC.c **** uint8_t ADC_Cal(ADC_MemMapPtr);
 242:../Sources/TFC/TFC_ADC.c **** 
 243:../Sources/TFC/TFC_ADC.c **** void ADC_Config_Alt(ADC_MemMapPtr, tADC_ConfigPtr);
 244:../Sources/TFC/TFC_ADC.c **** 
 245:../Sources/TFC/TFC_ADC.c **** void ADC_Read_Cal(ADC_MemMapPtr, tADC_Cal_Blk *);
 246:../Sources/TFC/TFC_ADC.c **** 
 247:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_INIT							0
 248:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_POT_0			        1
 249:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_POT_1			        2
 250:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_BATTERY_LEVEL			3
 251:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_HBRIDGE_A			    4
 252:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_HBRIDGE_B  	        5
 253:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_LINE_SCAN		        6
 254:../Sources/TFC/TFC_ADC.c **** 
 255:../Sources/TFC/TFC_ADC.c **** 
 256:../Sources/TFC/TFC_ADC.c **** volatile uint16_t PotADC_Value[2];
 257:../Sources/TFC/TFC_ADC.c **** volatile uint16_t HBridge_Value[2];
 258:../Sources/TFC/TFC_ADC.c **** volatile uint16_t BatSenseADC_Value;
 259:../Sources/TFC/TFC_ADC.c **** static uint8_t 	CurrentADC_State =	ADC_STATE_INIT;	
 260:../Sources/TFC/TFC_ADC.c **** 
 261:../Sources/TFC/TFC_ADC.c **** volatile uint8_t CurrentLineScanPixel = 0;
 262:../Sources/TFC/TFC_ADC.c **** volatile uint8_t CurrentLineScanChannel = 0;
 263:../Sources/TFC/TFC_ADC.c **** 
 264:../Sources/TFC/TFC_ADC.c **** void InitADC0();
 265:../Sources/TFC/TFC_ADC.c **** 
 266:../Sources/TFC/TFC_ADC.c **** /******************************************************************************
 267:../Sources/TFC/TFC_ADC.c **** Function 1. Name	AUTO CAL ROUTINE   
 268:../Sources/TFC/TFC_ADC.c **** 
 269:../Sources/TFC/TFC_ADC.c **** Parameters		ADC module pointer points to adc0 or adc1 register map 
 270:../Sources/TFC/TFC_ADC.c ****                          base address.
 271:../Sources/TFC/TFC_ADC.c **** Returns			Zero indicates success.
 272:../Sources/TFC/TFC_ADC.c **** Notes         		Calibrates the ADC16. Required to meet specifications 
 273:../Sources/TFC/TFC_ADC.c ****                         after reset and before a conversion is initiated.
 274:../Sources/TFC/TFC_ADC.c **** ******************************************************************************/
 275:../Sources/TFC/TFC_ADC.c **** unsigned char ADC_Cal(ADC_MemMapPtr adcmap)
 276:../Sources/TFC/TFC_ADC.c **** {
  46              		.loc 1 276 0
  47              		.cfi_startproc
  48 0000 80B5     		push	{r7, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 84B0     		sub	sp, sp, #16
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 24
  56 0004 00AF     		add	r7, sp, #0
  57              	.LCFI2:
  58              		.cfi_def_cfa_register 7
  59 0006 7860     		str	r0, [r7, #4]
 277:../Sources/TFC/TFC_ADC.c **** 
 278:../Sources/TFC/TFC_ADC.c ****   unsigned short cal_var;
 279:../Sources/TFC/TFC_ADC.c ****   
 280:../Sources/TFC/TFC_ADC.c ****   ADC_SC2_REG(adcmap) &=  ~ADC_SC2_ADTRG_MASK ; // Enable Software Conversion Trigger for Calibrati
  60              		.loc 1 280 0
  61 0008 7B68     		ldr	r3, [r7, #4]
  62 000a 1B6A     		ldr	r3, [r3, #32]
  63 000c 4022     		mov	r2, #64
  64 000e 191C     		mov	r1, r3
  65 0010 9143     		bic	r1, r2
  66 0012 0A1C     		mov	r2, r1
  67 0014 7B68     		ldr	r3, [r7, #4]
  68 0016 1A62     		str	r2, [r3, #32]
 281:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); // set single conversion, cle
  69              		.loc 1 281 0
  70 0018 7B68     		ldr	r3, [r7, #4]
  71 001a 5B6A     		ldr	r3, [r3, #36]
  72 001c 0B22     		mov	r2, #11
  73 001e 191C     		mov	r1, r3
  74 0020 9143     		bic	r1, r2
  75 0022 0A1C     		mov	r2, r1
  76 0024 7B68     		ldr	r3, [r7, #4]
  77 0026 5A62     		str	r2, [r3, #36]
 282:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
  78              		.loc 1 282 0
  79 0028 7B68     		ldr	r3, [r7, #4]
  80 002a 5B6A     		ldr	r3, [r3, #36]
  81 002c 0722     		mov	r2, #7
  82 002e 1A43     		orr	r2, r3
  83 0030 7B68     		ldr	r3, [r7, #4]
  84 0032 5A62     		str	r2, [r3, #36]
 283:../Sources/TFC/TFC_ADC.c ****   
 284:../Sources/TFC/TFC_ADC.c ****   
 285:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
  85              		.loc 1 285 0
  86 0034 7B68     		ldr	r3, [r7, #4]
  87 0036 5B6A     		ldr	r3, [r3, #36]
  88 0038 8022     		mov	r2, #128
  89 003a 1A43     		orr	r2, r3
  90 003c 7B68     		ldr	r3, [r7, #4]
  91 003e 5A62     		str	r2, [r3, #36]
 286:../Sources/TFC/TFC_ADC.c ****   while ( (ADC_SC1_REG(adcmap,A) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
  92              		.loc 1 286 0
  93 0040 C046     		mov	r8, r8
  94              	.L2:
  95              		.loc 1 286 0 is_stmt 0
  96 0042 7B68     		ldr	r3, [r7, #4]
  97 0044 1A68     		ldr	r2, [r3]
  98 0046 8023     		mov	r3, #128
  99 0048 1340     		and	r3, r2
 100 004a FAD0     		beq	.L2
 287:../Sources/TFC/TFC_ADC.c ****   	
 288:../Sources/TFC/TFC_ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
 101              		.loc 1 288 0 is_stmt 1
 102 004c 7B68     		ldr	r3, [r7, #4]
 103 004e 5A6A     		ldr	r2, [r3, #36]
 104 0050 4023     		mov	r3, #64
 105 0052 1340     		and	r3, r2
 106 0054 01D0     		beq	.L3
 289:../Sources/TFC/TFC_ADC.c ****   {  
 290:../Sources/TFC/TFC_ADC.c ****    return(1);    // Check for Calibration fail error and return 
 107              		.loc 1 290 0
 108 0056 0123     		mov	r3, #1
 109 0058 A6E0     		b	.L4
 110              	.L3:
 291:../Sources/TFC/TFC_ADC.c ****   }
 292:../Sources/TFC/TFC_ADC.c ****   // Calculate plus-side calibration
 293:../Sources/TFC/TFC_ADC.c ****   cal_var = 0x00;
 111              		.loc 1 293 0
 112 005a 3B1C     		mov	r3, r7
 113 005c 0E33     		add	r3, r3, #14
 114 005e 0022     		mov	r2, #0
 115 0060 1A80     		strh	r2, [r3]
 294:../Sources/TFC/TFC_ADC.c ****   
 295:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLP0_REG(adcmap); 
 116              		.loc 1 295 0
 117 0062 7B68     		ldr	r3, [r7, #4]
 118 0064 DA6C     		ldr	r2, [r3, #76]
 119 0066 3B1C     		mov	r3, r7
 120 0068 0E33     		add	r3, r3, #14
 121 006a 1A80     		strh	r2, [r3]
 296:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
 122              		.loc 1 296 0
 123 006c 7B68     		ldr	r3, [r7, #4]
 124 006e 9B6C     		ldr	r3, [r3, #72]
 125 0070 99B2     		uxth	r1, r3
 126 0072 3B1C     		mov	r3, r7
 127 0074 0E33     		add	r3, r3, #14
 128 0076 3A1C     		mov	r2, r7
 129 0078 0E32     		add	r2, r2, #14
 130 007a 1288     		ldrh	r2, [r2]
 131 007c 8A18     		add	r2, r1, r2
 132 007e 1A80     		strh	r2, [r3]
 297:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 133              		.loc 1 297 0
 134 0080 7B68     		ldr	r3, [r7, #4]
 135 0082 5B6C     		ldr	r3, [r3, #68]
 136 0084 99B2     		uxth	r1, r3
 137 0086 3B1C     		mov	r3, r7
 138 0088 0E33     		add	r3, r3, #14
 139 008a 3A1C     		mov	r2, r7
 140 008c 0E32     		add	r2, r2, #14
 141 008e 1288     		ldrh	r2, [r2]
 142 0090 8A18     		add	r2, r1, r2
 143 0092 1A80     		strh	r2, [r3]
 298:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 144              		.loc 1 298 0
 145 0094 7B68     		ldr	r3, [r7, #4]
 146 0096 1B6C     		ldr	r3, [r3, #64]
 147 0098 99B2     		uxth	r1, r3
 148 009a 3B1C     		mov	r3, r7
 149 009c 0E33     		add	r3, r3, #14
 150 009e 3A1C     		mov	r2, r7
 151 00a0 0E32     		add	r2, r2, #14
 152 00a2 1288     		ldrh	r2, [r2]
 153 00a4 8A18     		add	r2, r1, r2
 154 00a6 1A80     		strh	r2, [r3]
 299:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 155              		.loc 1 299 0
 156 00a8 7B68     		ldr	r3, [r7, #4]
 157 00aa DB6B     		ldr	r3, [r3, #60]
 158 00ac 99B2     		uxth	r1, r3
 159 00ae 3B1C     		mov	r3, r7
 160 00b0 0E33     		add	r3, r3, #14
 161 00b2 3A1C     		mov	r2, r7
 162 00b4 0E32     		add	r2, r2, #14
 163 00b6 1288     		ldrh	r2, [r2]
 164 00b8 8A18     		add	r2, r1, r2
 165 00ba 1A80     		strh	r2, [r3]
 300:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 166              		.loc 1 300 0
 167 00bc 7B68     		ldr	r3, [r7, #4]
 168 00be 9B6B     		ldr	r3, [r3, #56]
 169 00c0 99B2     		uxth	r1, r3
 170 00c2 3B1C     		mov	r3, r7
 171 00c4 0E33     		add	r3, r3, #14
 172 00c6 3A1C     		mov	r2, r7
 173 00c8 0E32     		add	r2, r2, #14
 174 00ca 1288     		ldrh	r2, [r2]
 175 00cc 8A18     		add	r2, r1, r2
 176 00ce 1A80     		strh	r2, [r3]
 301:../Sources/TFC/TFC_ADC.c **** 
 302:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 177              		.loc 1 302 0
 178 00d0 3B1C     		mov	r3, r7
 179 00d2 0E33     		add	r3, r3, #14
 180 00d4 3A1C     		mov	r2, r7
 181 00d6 0E32     		add	r2, r2, #14
 182 00d8 1288     		ldrh	r2, [r2]
 183 00da 5208     		lsr	r2, r2, #1
 184 00dc 1A80     		strh	r2, [r3]
 303:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 185              		.loc 1 303 0
 186 00de 3B1C     		mov	r3, r7
 187 00e0 0E33     		add	r3, r3, #14
 188 00e2 3A1C     		mov	r2, r7
 189 00e4 0E32     		add	r2, r2, #14
 190 00e6 1288     		ldrh	r2, [r2]
 191 00e8 3149     		ldr	r1, .L5
 192 00ea 0A43     		orr	r2, r1
 193 00ec 1A80     		strh	r2, [r3]
 304:../Sources/TFC/TFC_ADC.c **** 
 305:../Sources/TFC/TFC_ADC.c ****   ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 194              		.loc 1 305 0
 195 00ee 3B1C     		mov	r3, r7
 196 00f0 0E33     		add	r3, r3, #14
 197 00f2 1A88     		ldrh	r2, [r3]
 198 00f4 7B68     		ldr	r3, [r7, #4]
 199 00f6 DA62     		str	r2, [r3, #44]
 306:../Sources/TFC/TFC_ADC.c ****  
 307:../Sources/TFC/TFC_ADC.c **** 
 308:../Sources/TFC/TFC_ADC.c ****   // Calculate minus-side calibration
 309:../Sources/TFC/TFC_ADC.c ****   cal_var = 0x00;
 200              		.loc 1 309 0
 201 00f8 3B1C     		mov	r3, r7
 202 00fa 0E33     		add	r3, r3, #14
 203 00fc 0022     		mov	r2, #0
 204 00fe 1A80     		strh	r2, [r3]
 310:../Sources/TFC/TFC_ADC.c **** 
 311:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLM0_REG(adcmap); 
 205              		.loc 1 311 0
 206 0100 7B68     		ldr	r3, [r7, #4]
 207 0102 DA6E     		ldr	r2, [r3, #108]
 208 0104 3B1C     		mov	r3, r7
 209 0106 0E33     		add	r3, r3, #14
 210 0108 1A80     		strh	r2, [r3]
 312:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 211              		.loc 1 312 0
 212 010a 7B68     		ldr	r3, [r7, #4]
 213 010c 9B6E     		ldr	r3, [r3, #104]
 214 010e 99B2     		uxth	r1, r3
 215 0110 3B1C     		mov	r3, r7
 216 0112 0E33     		add	r3, r3, #14
 217 0114 3A1C     		mov	r2, r7
 218 0116 0E32     		add	r2, r2, #14
 219 0118 1288     		ldrh	r2, [r2]
 220 011a 8A18     		add	r2, r1, r2
 221 011c 1A80     		strh	r2, [r3]
 313:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 222              		.loc 1 313 0
 223 011e 7B68     		ldr	r3, [r7, #4]
 224 0120 5B6E     		ldr	r3, [r3, #100]
 225 0122 99B2     		uxth	r1, r3
 226 0124 3B1C     		mov	r3, r7
 227 0126 0E33     		add	r3, r3, #14
 228 0128 3A1C     		mov	r2, r7
 229 012a 0E32     		add	r2, r2, #14
 230 012c 1288     		ldrh	r2, [r2]
 231 012e 8A18     		add	r2, r1, r2
 232 0130 1A80     		strh	r2, [r3]
 314:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 233              		.loc 1 314 0
 234 0132 7B68     		ldr	r3, [r7, #4]
 235 0134 1B6E     		ldr	r3, [r3, #96]
 236 0136 99B2     		uxth	r1, r3
 237 0138 3B1C     		mov	r3, r7
 238 013a 0E33     		add	r3, r3, #14
 239 013c 3A1C     		mov	r2, r7
 240 013e 0E32     		add	r2, r2, #14
 241 0140 1288     		ldrh	r2, [r2]
 242 0142 8A18     		add	r2, r1, r2
 243 0144 1A80     		strh	r2, [r3]
 315:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 244              		.loc 1 315 0
 245 0146 7B68     		ldr	r3, [r7, #4]
 246 0148 DB6D     		ldr	r3, [r3, #92]
 247 014a 99B2     		uxth	r1, r3
 248 014c 3B1C     		mov	r3, r7
 249 014e 0E33     		add	r3, r3, #14
 250 0150 3A1C     		mov	r2, r7
 251 0152 0E32     		add	r2, r2, #14
 252 0154 1288     		ldrh	r2, [r2]
 253 0156 8A18     		add	r2, r1, r2
 254 0158 1A80     		strh	r2, [r3]
 316:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLMS_REG(adcmap);
 255              		.loc 1 316 0
 256 015a 7B68     		ldr	r3, [r7, #4]
 257 015c 9B6D     		ldr	r3, [r3, #88]
 258 015e 99B2     		uxth	r1, r3
 259 0160 3B1C     		mov	r3, r7
 260 0162 0E33     		add	r3, r3, #14
 261 0164 3A1C     		mov	r2, r7
 262 0166 0E32     		add	r2, r2, #14
 263 0168 1288     		ldrh	r2, [r2]
 264 016a 8A18     		add	r2, r1, r2
 265 016c 1A80     		strh	r2, [r3]
 317:../Sources/TFC/TFC_ADC.c **** 
 318:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 266              		.loc 1 318 0
 267 016e 3B1C     		mov	r3, r7
 268 0170 0E33     		add	r3, r3, #14
 269 0172 3A1C     		mov	r2, r7
 270 0174 0E32     		add	r2, r2, #14
 271 0176 1288     		ldrh	r2, [r2]
 272 0178 5208     		lsr	r2, r2, #1
 273 017a 1A80     		strh	r2, [r3]
 319:../Sources/TFC/TFC_ADC.c **** 
 320:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 274              		.loc 1 320 0
 275 017c 3B1C     		mov	r3, r7
 276 017e 0E33     		add	r3, r3, #14
 277 0180 3A1C     		mov	r2, r7
 278 0182 0E32     		add	r2, r2, #14
 279 0184 1288     		ldrh	r2, [r2]
 280 0186 0A49     		ldr	r1, .L5
 281 0188 0A43     		orr	r2, r1
 282 018a 1A80     		strh	r2, [r3]
 321:../Sources/TFC/TFC_ADC.c **** 
 322:../Sources/TFC/TFC_ADC.c ****   ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var); 
 283              		.loc 1 322 0
 284 018c 3B1C     		mov	r3, r7
 285 018e 0E33     		add	r3, r3, #14
 286 0190 1A88     		ldrh	r2, [r3]
 287 0192 7B68     		ldr	r3, [r7, #4]
 288 0194 1A63     		str	r2, [r3, #48]
 323:../Sources/TFC/TFC_ADC.c ****   
 324:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK ; /* Clear CAL bit */
 289              		.loc 1 324 0
 290 0196 7B68     		ldr	r3, [r7, #4]
 291 0198 5B6A     		ldr	r3, [r3, #36]
 292 019a 8022     		mov	r2, #128
 293 019c 191C     		mov	r1, r3
 294 019e 9143     		bic	r1, r2
 295 01a0 0A1C     		mov	r2, r1
 296 01a2 7B68     		ldr	r3, [r7, #4]
 297 01a4 5A62     		str	r2, [r3, #36]
 325:../Sources/TFC/TFC_ADC.c **** 
 326:../Sources/TFC/TFC_ADC.c ****   return(0);
 298              		.loc 1 326 0
 299 01a6 0023     		mov	r3, #0
 300              	.L4:
 327:../Sources/TFC/TFC_ADC.c **** }
 301              		.loc 1 327 0
 302 01a8 181C     		mov	r0, r3
 303 01aa BD46     		mov	sp, r7
 304 01ac 04B0     		add	sp, sp, #16
 305              		@ sp needed for prologue
 306 01ae 80BD     		pop	{r7, pc}
 307              	.L6:
 308              		.align	2
 309              	.L5:
 310 01b0 0080FFFF 		.word	-32768
 311              		.cfi_endproc
 312              	.LFE0:
 314              		.section	.text.ADC_Config_Alt,"ax",%progbits
 315              		.align	2
 316              		.global	ADC_Config_Alt
 317              		.code	16
 318              		.thumb_func
 320              	ADC_Config_Alt:
 321              	.LFB1:
 328:../Sources/TFC/TFC_ADC.c **** 
 329:../Sources/TFC/TFC_ADC.c **** 
 330:../Sources/TFC/TFC_ADC.c **** 
 331:../Sources/TFC/TFC_ADC.c **** 
 332:../Sources/TFC/TFC_ADC.c **** /******************************************************************************
 333:../Sources/TFC/TFC_ADC.c **** Function 2 Name 	ADC_Config_Alt 
 334:../Sources/TFC/TFC_ADC.c **** Parameters		the register values to be set in the adc in a structure
 335:../Sources/TFC/TFC_ADC.c **** Returns			NONE
 336:../Sources/TFC/TFC_ADC.c **** Notes         		Configures ADC0 or ADC1 depending on adcmap
 337:../Sources/TFC/TFC_ADC.c ****                         Prior to calling this function populate the structure
 338:../Sources/TFC/TFC_ADC.c ****                         elements with the desired ADC configuration.
 339:../Sources/TFC/TFC_ADC.c **** ******************************************************************************/
 340:../Sources/TFC/TFC_ADC.c **** 
 341:../Sources/TFC/TFC_ADC.c **** 
 342:../Sources/TFC/TFC_ADC.c **** void ADC_Config_Alt(ADC_MemMapPtr adcmap, tADC_ConfigPtr ADC_CfgPtr)
 343:../Sources/TFC/TFC_ADC.c **** {
 322              		.loc 1 343 0
 323              		.cfi_startproc
 324 0000 80B5     		push	{r7, lr}
 325              	.LCFI3:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 82B0     		sub	sp, sp, #8
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 16
 332 0004 00AF     		add	r7, sp, #0
 333              	.LCFI5:
 334              		.cfi_def_cfa_register 7
 335 0006 7860     		str	r0, [r7, #4]
 336 0008 3960     		str	r1, [r7]
 344:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 337              		.loc 1 344 0
 338 000a 3B68     		ldr	r3, [r7]
 339 000c 1B78     		ldrb	r3, [r3]
 340 000e 1A1C     		mov	r2, r3
 341 0010 7B68     		ldr	r3, [r7, #4]
 342 0012 9A60     		str	r2, [r3, #8]
 345:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 343              		.loc 1 345 0
 344 0014 3B68     		ldr	r3, [r7]
 345 0016 5B78     		ldrb	r3, [r3, #1]
 346 0018 1A1C     		mov	r2, r3
 347 001a 7B68     		ldr	r3, [r7, #4]
 348 001c DA60     		str	r2, [r3, #12]
 346:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 349              		.loc 1 346 0
 350 001e 3B68     		ldr	r3, [r7]
 351 0020 5B88     		ldrh	r3, [r3, #2]
 352 0022 1A1C     		mov	r2, r3
 353 0024 7B68     		ldr	r3, [r7, #4]
 354 0026 9A61     		str	r2, [r3, #24]
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 355              		.loc 1 347 0
 356 0028 3B68     		ldr	r3, [r7]
 357 002a 9B88     		ldrh	r3, [r3, #4]
 358 002c 1A1C     		mov	r2, r3
 359 002e 7B68     		ldr	r3, [r7, #4]
 360 0030 DA61     		str	r2, [r3, #28]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 361              		.loc 1 348 0
 362 0032 3B68     		ldr	r3, [r7]
 363 0034 9B79     		ldrb	r3, [r3, #6]
 364 0036 1A1C     		mov	r2, r3
 365 0038 7B68     		ldr	r3, [r7, #4]
 366 003a 1A62     		str	r2, [r3, #32]
 349:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 367              		.loc 1 349 0
 368 003c 3B68     		ldr	r3, [r7]
 369 003e DB79     		ldrb	r3, [r3, #7]
 370 0040 1A1C     		mov	r2, r3
 371 0042 7B68     		ldr	r3, [r7, #4]
 372 0044 5A62     		str	r2, [r3, #36]
 350:../Sources/TFC/TFC_ADC.c ****  //ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 373              		.loc 1 351 0
 374 0046 3B68     		ldr	r3, [r7]
 375 0048 1B7A     		ldrb	r3, [r3, #8]
 376 004a 1A1C     		mov	r2, r3
 377 004c 7B68     		ldr	r3, [r7, #4]
 378 004e 1A60     		str	r2, [r3]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 379              		.loc 1 352 0
 380 0050 3B68     		ldr	r3, [r7]
 381 0052 5B7A     		ldrb	r3, [r3, #9]
 382 0054 1A1C     		mov	r2, r3
 383 0056 7B68     		ldr	r3, [r7, #4]
 384 0058 5A60     		str	r2, [r3, #4]
 353:../Sources/TFC/TFC_ADC.c **** }
 385              		.loc 1 353 0
 386 005a BD46     		mov	sp, r7
 387 005c 02B0     		add	sp, sp, #8
 388              		@ sp needed for prologue
 389 005e 80BD     		pop	{r7, pc}
 390              		.cfi_endproc
 391              	.LFE1:
 393              		.section	.text.ADC_Read_Cal,"ax",%progbits
 394              		.align	2
 395              		.global	ADC_Read_Cal
 396              		.code	16
 397              		.thumb_func
 399              	ADC_Read_Cal:
 400              	.LFB2:
 354:../Sources/TFC/TFC_ADC.c **** 
 355:../Sources/TFC/TFC_ADC.c **** 
 356:../Sources/TFC/TFC_ADC.c **** void ADC_Read_Cal(ADC_MemMapPtr adcmap, tADC_Cal_Blk *blk)
 357:../Sources/TFC/TFC_ADC.c **** {
 401              		.loc 1 357 0
 402              		.cfi_startproc
 403 0000 80B5     		push	{r7, lr}
 404              	.LCFI6:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 82B0     		sub	sp, sp, #8
 409              	.LCFI7:
 410              		.cfi_def_cfa_offset 16
 411 0004 00AF     		add	r7, sp, #0
 412              	.LCFI8:
 413              		.cfi_def_cfa_register 7
 414 0006 7860     		str	r0, [r7, #4]
 415 0008 3960     		str	r1, [r7]
 358:../Sources/TFC/TFC_ADC.c ****   blk->OFS  = ADC_OFS_REG(adcmap);
 416              		.loc 1 358 0
 417 000a 7B68     		ldr	r3, [r7, #4]
 418 000c 9B6A     		ldr	r3, [r3, #40]
 419 000e 9AB2     		uxth	r2, r3
 420 0010 3B68     		ldr	r3, [r7]
 421 0012 1A80     		strh	r2, [r3]
 359:../Sources/TFC/TFC_ADC.c ****   blk->PG   = ADC_PG_REG(adcmap); 
 422              		.loc 1 359 0
 423 0014 7B68     		ldr	r3, [r7, #4]
 424 0016 DB6A     		ldr	r3, [r3, #44]
 425 0018 9AB2     		uxth	r2, r3
 426 001a 3B68     		ldr	r3, [r7]
 427 001c 5A80     		strh	r2, [r3, #2]
 360:../Sources/TFC/TFC_ADC.c ****   blk->MG   = ADC_MG_REG(adcmap); 
 428              		.loc 1 360 0
 429 001e 7B68     		ldr	r3, [r7, #4]
 430 0020 1B6B     		ldr	r3, [r3, #48]
 431 0022 9AB2     		uxth	r2, r3
 432 0024 3B68     		ldr	r3, [r7]
 433 0026 9A80     		strh	r2, [r3, #4]
 361:../Sources/TFC/TFC_ADC.c ****   blk->CLPD = ADC_CLPD_REG(adcmap); 
 434              		.loc 1 361 0
 435 0028 7B68     		ldr	r3, [r7, #4]
 436 002a 5B6B     		ldr	r3, [r3, #52]
 437 002c DAB2     		uxtb	r2, r3
 438 002e 3B68     		ldr	r3, [r7]
 439 0030 9A71     		strb	r2, [r3, #6]
 362:../Sources/TFC/TFC_ADC.c ****   blk->CLPS = ADC_CLPS_REG(adcmap); 
 440              		.loc 1 362 0
 441 0032 7B68     		ldr	r3, [r7, #4]
 442 0034 9B6B     		ldr	r3, [r3, #56]
 443 0036 DAB2     		uxtb	r2, r3
 444 0038 3B68     		ldr	r3, [r7]
 445 003a DA71     		strb	r2, [r3, #7]
 363:../Sources/TFC/TFC_ADC.c ****   blk->CLP4 = ADC_CLP4_REG(adcmap);
 446              		.loc 1 363 0
 447 003c 7B68     		ldr	r3, [r7, #4]
 448 003e DB6B     		ldr	r3, [r3, #60]
 449 0040 9AB2     		uxth	r2, r3
 450 0042 3B68     		ldr	r3, [r7]
 451 0044 1A81     		strh	r2, [r3, #8]
 364:../Sources/TFC/TFC_ADC.c ****   blk->CLP3 = ADC_CLP3_REG(adcmap); 
 452              		.loc 1 364 0
 453 0046 7B68     		ldr	r3, [r7, #4]
 454 0048 1B6C     		ldr	r3, [r3, #64]
 455 004a 9AB2     		uxth	r2, r3
 456 004c 3B68     		ldr	r3, [r7]
 457 004e 5A81     		strh	r2, [r3, #10]
 365:../Sources/TFC/TFC_ADC.c ****   blk->CLP2 = ADC_CLP2_REG(adcmap); 
 458              		.loc 1 365 0
 459 0050 7B68     		ldr	r3, [r7, #4]
 460 0052 5B6C     		ldr	r3, [r3, #68]
 461 0054 DAB2     		uxtb	r2, r3
 462 0056 3B68     		ldr	r3, [r7]
 463 0058 1A73     		strb	r2, [r3, #12]
 366:../Sources/TFC/TFC_ADC.c ****   blk->CLP1 = ADC_CLP1_REG(adcmap);
 464              		.loc 1 366 0
 465 005a 7B68     		ldr	r3, [r7, #4]
 466 005c 9B6C     		ldr	r3, [r3, #72]
 467 005e DAB2     		uxtb	r2, r3
 468 0060 3B68     		ldr	r3, [r7]
 469 0062 5A73     		strb	r2, [r3, #13]
 367:../Sources/TFC/TFC_ADC.c ****   blk->CLP0 = ADC_CLP0_REG(adcmap);
 470              		.loc 1 367 0
 471 0064 7B68     		ldr	r3, [r7, #4]
 472 0066 DB6C     		ldr	r3, [r3, #76]
 473 0068 DAB2     		uxtb	r2, r3
 474 006a 3B68     		ldr	r3, [r7]
 475 006c 9A73     		strb	r2, [r3, #14]
 368:../Sources/TFC/TFC_ADC.c ****   blk->CLMD = ADC_CLMD_REG(adcmap); 
 476              		.loc 1 368 0
 477 006e 7B68     		ldr	r3, [r7, #4]
 478 0070 5B6D     		ldr	r3, [r3, #84]
 479 0072 DAB2     		uxtb	r2, r3
 480 0074 3B68     		ldr	r3, [r7]
 481 0076 1A74     		strb	r2, [r3, #16]
 369:../Sources/TFC/TFC_ADC.c ****   blk->CLMS = ADC_CLMS_REG(adcmap); 
 482              		.loc 1 369 0
 483 0078 7B68     		ldr	r3, [r7, #4]
 484 007a 9B6D     		ldr	r3, [r3, #88]
 485 007c DAB2     		uxtb	r2, r3
 486 007e 3B68     		ldr	r3, [r7]
 487 0080 5A74     		strb	r2, [r3, #17]
 370:../Sources/TFC/TFC_ADC.c ****   blk->CLM4 = ADC_CLM4_REG(adcmap);
 488              		.loc 1 370 0
 489 0082 7B68     		ldr	r3, [r7, #4]
 490 0084 DB6D     		ldr	r3, [r3, #92]
 491 0086 9AB2     		uxth	r2, r3
 492 0088 3B68     		ldr	r3, [r7]
 493 008a 5A82     		strh	r2, [r3, #18]
 371:../Sources/TFC/TFC_ADC.c ****   blk->CLM3 = ADC_CLM3_REG(adcmap); 
 494              		.loc 1 371 0
 495 008c 7B68     		ldr	r3, [r7, #4]
 496 008e 1B6E     		ldr	r3, [r3, #96]
 497 0090 9AB2     		uxth	r2, r3
 498 0092 3B68     		ldr	r3, [r7]
 499 0094 9A82     		strh	r2, [r3, #20]
 372:../Sources/TFC/TFC_ADC.c ****   blk->CLM2 = ADC_CLM2_REG(adcmap); 
 500              		.loc 1 372 0
 501 0096 7B68     		ldr	r3, [r7, #4]
 502 0098 5B6E     		ldr	r3, [r3, #100]
 503 009a DAB2     		uxtb	r2, r3
 504 009c 3B68     		ldr	r3, [r7]
 505 009e 9A75     		strb	r2, [r3, #22]
 373:../Sources/TFC/TFC_ADC.c ****   blk->CLM1 = ADC_CLM1_REG(adcmap);
 506              		.loc 1 373 0
 507 00a0 7B68     		ldr	r3, [r7, #4]
 508 00a2 9B6E     		ldr	r3, [r3, #104]
 509 00a4 DAB2     		uxtb	r2, r3
 510 00a6 3B68     		ldr	r3, [r7]
 511 00a8 DA75     		strb	r2, [r3, #23]
 374:../Sources/TFC/TFC_ADC.c ****   blk->CLM0 = ADC_CLM0_REG(adcmap);
 512              		.loc 1 374 0
 513 00aa 7B68     		ldr	r3, [r7, #4]
 514 00ac DB6E     		ldr	r3, [r3, #108]
 515 00ae DAB2     		uxtb	r2, r3
 516 00b0 3B68     		ldr	r3, [r7]
 517 00b2 1A76     		strb	r2, [r3, #24]
 375:../Sources/TFC/TFC_ADC.c ****   
 376:../Sources/TFC/TFC_ADC.c **** }
 518              		.loc 1 376 0
 519 00b4 BD46     		mov	sp, r7
 520 00b6 02B0     		add	sp, sp, #8
 521              		@ sp needed for prologue
 522 00b8 80BD     		pop	{r7, pc}
 523              		.cfi_endproc
 524              	.LFE2:
 526 00ba C046     		.section	.text.InitADC0,"ax",%progbits
 527              		.align	2
 528              		.global	InitADC0
 529              		.code	16
 530              		.thumb_func
 532              	InitADC0:
 533              	.LFB3:
 377:../Sources/TFC/TFC_ADC.c **** 
 378:../Sources/TFC/TFC_ADC.c **** 
 379:../Sources/TFC/TFC_ADC.c **** 
 380:../Sources/TFC/TFC_ADC.c **** void InitADC0()
 381:../Sources/TFC/TFC_ADC.c **** {
 534              		.loc 1 381 0
 535              		.cfi_startproc
 536 0000 80B5     		push	{r7, lr}
 537              	.LCFI9:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 7, -8
 540              		.cfi_offset 14, -4
 541 0002 84B0     		sub	sp, sp, #16
 542              	.LCFI10:
 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              	.LCFI11:
 546              		.cfi_def_cfa_register 7
 382:../Sources/TFC/TFC_ADC.c **** 	tADC_Config Master_Adc0_Config;
 383:../Sources/TFC/TFC_ADC.c **** 	
 384:../Sources/TFC/TFC_ADC.c **** 	
 385:../Sources/TFC/TFC_ADC.c ****     SIM_SCGC6 |= (SIM_SCGC6_ADC0_MASK);
 547              		.loc 1 385 0
 548 0006 1F4A     		ldr	r2, .L10
 549 0008 1E49     		ldr	r1, .L10
 550 000a 1F4B     		ldr	r3, .L10+4
 551 000c CB58     		ldr	r3, [r1, r3]
 552 000e 8021     		mov	r1, #128
 553 0010 0905     		lsl	r1, r1, #20
 554 0012 1943     		orr	r1, r3
 555 0014 1C4B     		ldr	r3, .L10+4
 556 0016 D150     		str	r1, [r2, r3]
 386:../Sources/TFC/TFC_ADC.c ****     
 387:../Sources/TFC/TFC_ADC.c ****     //Lets calibrate the ADC. 1st setup how the channel will be used.
 388:../Sources/TFC/TFC_ADC.c **** 
 389:../Sources/TFC/TFC_ADC.c ****     disable_irq(INT_ADC0-16);   
 557              		.loc 1 389 0
 558 0018 0F20     		mov	r0, #15
 559 001a FFF7FEFF 		bl	disable_irq
 390:../Sources/TFC/TFC_ADC.c ****      
 391:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.CONFIG1 = ADLPC_NORMAL 			//No low power mode
 560              		.loc 1 391 0
 561 001e 3B1C     		mov	r3, r7
 562 0020 5422     		mov	r2, #84
 563 0022 1A70     		strb	r2, [r3]
 392:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_ADIV(ADIV_4) //divide input by 4
 393:../Sources/TFC/TFC_ADC.c **** 								| ADLSMP_LONG 			//long sample time
 394:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_MODE(MODE_12)//single ended 8-bit conversion
 395:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_ADICLK(ADICLK_BUS);
 396:../Sources/TFC/TFC_ADC.c ****     
 397:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.CONFIG2 = MUXSEL_ADCA // select the A side of the ADC channel.
 564              		.loc 1 397 0
 565 0024 3B1C     		mov	r3, r7
 566 0026 0722     		mov	r2, #7
 567 0028 5A70     		strb	r2, [r3, #1]
 398:../Sources/TFC/TFC_ADC.c **** 								| ADACKEN_DISABLED
 399:../Sources/TFC/TFC_ADC.c **** 								| ADHSC_HISPEED
 400:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG2_ADLSTS(ADLSTS_2);//Extra long sample Time (20 extra clocks)
 401:../Sources/TFC/TFC_ADC.c ****     
 402:../Sources/TFC/TFC_ADC.c ****     
 403:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.COMPARE1 = 00000; // Comparators don't matter for calibration
 568              		.loc 1 403 0
 569 002a 3B1C     		mov	r3, r7
 570 002c 0022     		mov	r2, #0
 571 002e 5A80     		strh	r2, [r3, #2]
 404:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.COMPARE1 = 0xFFFF;
 572              		.loc 1 404 0
 573 0030 3B1C     		mov	r3, r7
 574 0032 0122     		mov	r2, #1
 575 0034 5242     		neg	r2, r2
 576 0036 5A80     		strh	r2, [r3, #2]
 405:../Sources/TFC/TFC_ADC.c ****     
 406:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS2  = ADTRG_HW //hardware triggers for calibration
 577              		.loc 1 406 0
 578 0038 3B1C     		mov	r3, r7
 579 003a 5822     		mov	r2, #88
 580 003c 9A71     		strb	r2, [r3, #6]
 407:../Sources/TFC/TFC_ADC.c ****                                | ACFE_DISABLED //disable comparator
 408:../Sources/TFC/TFC_ADC.c ****                                | ACFGT_GREATER
 409:../Sources/TFC/TFC_ADC.c ****                                | ACREN_ENABLED
 410:../Sources/TFC/TFC_ADC.c ****                                | DMAEN_DISABLED //Disable DMA
 411:../Sources/TFC/TFC_ADC.c ****                                | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 412:../Sources/TFC/TFC_ADC.c ****         
 413:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS3 = CAL_OFF  
 581              		.loc 1 413 0
 582 003e 3B1C     		mov	r3, r7
 583 0040 0422     		mov	r2, #4
 584 0042 DA71     		strb	r2, [r3, #7]
 414:../Sources/TFC/TFC_ADC.c **** 								| ADCO_SINGLE
 415:../Sources/TFC/TFC_ADC.c ****     							| AVGE_ENABLED
 416:../Sources/TFC/TFC_ADC.c **** 								| ADC_SC3_AVGS(AVGS_4);
 417:../Sources/TFC/TFC_ADC.c **** 								
 418:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.PGA =     0; // Disable the PGA
 585              		.loc 1 418 0
 586 0044 3B1C     		mov	r3, r7
 587 0046 0022     		mov	r2, #0
 588 0048 DA60     		str	r2, [r3, #12]
 419:../Sources/TFC/TFC_ADC.c ****    
 420:../Sources/TFC/TFC_ADC.c ****    
 421:../Sources/TFC/TFC_ADC.c ****     // Configure ADC as it will be used, but because ADC_SC1_ADCH is 31,
 422:../Sources/TFC/TFC_ADC.c ****     // the ADC will be inactive.  Channel 31 is just disable function.
 423:../Sources/TFC/TFC_ADC.c ****     // There really is no channel 31.
 424:../Sources/TFC/TFC_ADC.c ****     
 425:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS1A = AIEN_ON | DIFF_SINGLE | ADC_SC1_ADCH(31);
 589              		.loc 1 425 0
 590 004a 3B1C     		mov	r3, r7
 591 004c 5F22     		mov	r2, #95
 592 004e 1A72     		strb	r2, [r3, #8]
 426:../Sources/TFC/TFC_ADC.c **** 
 427:../Sources/TFC/TFC_ADC.c ****     
 428:../Sources/TFC/TFC_ADC.c ****     ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc0_Config);  // config ADC
 593              		.loc 1 428 0
 594 0050 0E4A     		ldr	r2, .L10+8
 595 0052 3B1C     		mov	r3, r7
 596 0054 101C     		mov	r0, r2
 597 0056 191C     		mov	r1, r3
 598 0058 FFF7FEFF 		bl	ADC_Config_Alt
 429:../Sources/TFC/TFC_ADC.c ****  
 430:../Sources/TFC/TFC_ADC.c ****     // Calibrate the ADC in the configuration in which it will be used:
 431:../Sources/TFC/TFC_ADC.c ****      ADC_Cal(ADC0_BASE_PTR);                    // do the calibration
 599              		.loc 1 431 0
 600 005c 0B4B     		ldr	r3, .L10+8
 601 005e 181C     		mov	r0, r3
 602 0060 FFF7FEFF 		bl	ADC_Cal
 432:../Sources/TFC/TFC_ADC.c ****      
 433:../Sources/TFC/TFC_ADC.c ****      
 434:../Sources/TFC/TFC_ADC.c ****      Master_Adc0_Config.STATUS2  = ACFE_DISABLED //disable comparator
 603              		.loc 1 434 0
 604 0064 3B1C     		mov	r3, r7
 605 0066 1822     		mov	r2, #24
 606 0068 9A71     		strb	r2, [r3, #6]
 435:../Sources/TFC/TFC_ADC.c ****                                 | ACFGT_GREATER
 436:../Sources/TFC/TFC_ADC.c ****                                 | ACREN_ENABLED
 437:../Sources/TFC/TFC_ADC.c ****                                 | DMAEN_DISABLED //Disable DMA
 438:../Sources/TFC/TFC_ADC.c ****                                 | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 439:../Sources/TFC/TFC_ADC.c ****     
 440:../Sources/TFC/TFC_ADC.c ****      Master_Adc0_Config.STATUS3 = CAL_OFF  
 607              		.loc 1 440 0
 608 006a 3B1C     		mov	r3, r7
 609 006c 0022     		mov	r2, #0
 610 006e DA71     		strb	r2, [r3, #7]
 441:../Sources/TFC/TFC_ADC.c ****      							| ADCO_SINGLE;
 442:../Sources/TFC/TFC_ADC.c ****      	 	 	 	 	 	 	
 443:../Sources/TFC/TFC_ADC.c ****      	 	 	 	 	 	 	
 444:../Sources/TFC/TFC_ADC.c ****      			
 445:../Sources/TFC/TFC_ADC.c ****      ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc0_Config);
 611              		.loc 1 445 0
 612 0070 064A     		ldr	r2, .L10+8
 613 0072 3B1C     		mov	r3, r7
 614 0074 101C     		mov	r0, r2
 615 0076 191C     		mov	r1, r3
 616 0078 FFF7FEFF 		bl	ADC_Config_Alt
 446:../Sources/TFC/TFC_ADC.c **** }
 617              		.loc 1 446 0
 618 007c BD46     		mov	sp, r7
 619 007e 04B0     		add	sp, sp, #16
 620              		@ sp needed for prologue
 621 0080 80BD     		pop	{r7, pc}
 622              	.L11:
 623 0082 C046     		.align	2
 624              	.L10:
 625 0084 00700440 		.word	1074032640
 626 0088 3C100000 		.word	4156
 627 008c 00B00340 		.word	1073983488
 628              		.cfi_endproc
 629              	.LFE3:
 631              		.section	.text.TFC_InitADCs,"ax",%progbits
 632              		.align	2
 633              		.global	TFC_InitADCs
 634              		.code	16
 635              		.thumb_func
 637              	TFC_InitADCs:
 638              	.LFB4:
 447:../Sources/TFC/TFC_ADC.c **** 
 448:../Sources/TFC/TFC_ADC.c **** 
 449:../Sources/TFC/TFC_ADC.c **** 
 450:../Sources/TFC/TFC_ADC.c **** void TFC_InitADCs()
 451:../Sources/TFC/TFC_ADC.c **** {
 639              		.loc 1 451 0
 640              		.cfi_startproc
 641 0000 80B5     		push	{r7, lr}
 642              	.LCFI12:
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 00AF     		add	r7, sp, #0
 647              	.LCFI13:
 648              		.cfi_def_cfa_register 7
 452:../Sources/TFC/TFC_ADC.c **** 
 453:../Sources/TFC/TFC_ADC.c **** 	 InitADC0();
 649              		.loc 1 453 0
 650 0004 FFF7FEFF 		bl	InitADC0
 454:../Sources/TFC/TFC_ADC.c **** 
 455:../Sources/TFC/TFC_ADC.c **** 	
 456:../Sources/TFC/TFC_ADC.c **** 	//All Adc processing of the Pots and linescan will be done in the ADC0 IRQ!
 457:../Sources/TFC/TFC_ADC.c **** 	//A state machine will scan through the channels.
 458:../Sources/TFC/TFC_ADC.c **** 	//This is done to automate the linescan capture on Channel 0 to ensure that timing is very even
 459:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State =	ADC_STATE_INIT;	
 651              		.loc 1 459 0
 652 0008 144B     		ldr	r3, .L13
 653 000a 0022     		mov	r2, #0
 654 000c 1A70     		strb	r2, [r3]
 460:../Sources/TFC/TFC_ADC.c **** 
 461:../Sources/TFC/TFC_ADC.c ****     //The pump will be primed with the PIT interrupt.  upon timeout/interrupt it will set the SI si
 462:../Sources/TFC/TFC_ADC.c **** 	//for the camera and then start the conversions for the pots.
 463:../Sources/TFC/TFC_ADC.c **** 	
 464:../Sources/TFC/TFC_ADC.c **** 	//Enable clock to the PIT
 465:../Sources/TFC/TFC_ADC.c **** 	SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
 655              		.loc 1 465 0
 656 000e 144A     		ldr	r2, .L13+4
 657 0010 1349     		ldr	r1, .L13+4
 658 0012 144B     		ldr	r3, .L13+8
 659 0014 CB58     		ldr	r3, [r1, r3]
 660 0016 8021     		mov	r1, #128
 661 0018 0904     		lsl	r1, r1, #16
 662 001a 1943     		orr	r1, r3
 663 001c 114B     		ldr	r3, .L13+8
 664 001e D150     		str	r1, [r2, r3]
 466:../Sources/TFC/TFC_ADC.c **** 	
 467:../Sources/TFC/TFC_ADC.c **** 	//We will use PIT0
 468:../Sources/TFC/TFC_ADC.c **** 	TFC_SetLineScanExposureTime(TFC_DEFAULT_LINESCAN_EXPOSURE_TIME_uS);
 665              		.loc 1 468 0
 666 0020 114B     		ldr	r3, .L13+12
 667 0022 181C     		mov	r0, r3
 668 0024 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 469:../Sources/TFC/TFC_ADC.c **** 	//enable PIT0 and its interrupt
 470:../Sources/TFC/TFC_ADC.c **** 	PIT_TCTRL0 = PIT_TCTRL_TEN_MASK | PIT_TCTRL_TIE_MASK;
 669              		.loc 1 470 0
 670 0028 104A     		ldr	r2, .L13+16
 671 002a 8423     		mov	r3, #132
 672 002c 5B00     		lsl	r3, r3, #1
 673 002e 0321     		mov	r1, #3
 674 0030 D150     		str	r1, [r2, r3]
 471:../Sources/TFC/TFC_ADC.c **** 
 472:../Sources/TFC/TFC_ADC.c **** 	PIT_MCR |= PIT_MCR_FRZ_MASK; // stop the pit when in debug mode
 675              		.loc 1 472 0
 676 0032 0E4B     		ldr	r3, .L13+16
 677 0034 0D4A     		ldr	r2, .L13+16
 678 0036 1268     		ldr	r2, [r2]
 679 0038 0121     		mov	r1, #1
 680 003a 0A43     		orr	r2, r1
 681 003c 1A60     		str	r2, [r3]
 473:../Sources/TFC/TFC_ADC.c **** 	//Enable the PIT module
 474:../Sources/TFC/TFC_ADC.c **** 	PIT_MCR &= ~PIT_MCR_MDIS_MASK;
 682              		.loc 1 474 0
 683 003e 0B4B     		ldr	r3, .L13+16
 684 0040 0A4A     		ldr	r2, .L13+16
 685 0042 1268     		ldr	r2, [r2]
 686 0044 0221     		mov	r1, #2
 687 0046 8A43     		bic	r2, r1
 688 0048 1A60     		str	r2, [r3]
 475:../Sources/TFC/TFC_ADC.c **** 	
 476:../Sources/TFC/TFC_ADC.c **** 	enable_irq(INT_PIT-16);
 689              		.loc 1 476 0
 690 004a 1620     		mov	r0, #22
 691 004c FFF7FEFF 		bl	enable_irq
 477:../Sources/TFC/TFC_ADC.c **** 	enable_irq(INT_ADC0-16);
 692              		.loc 1 477 0
 693 0050 0F20     		mov	r0, #15
 694 0052 FFF7FEFF 		bl	enable_irq
 478:../Sources/TFC/TFC_ADC.c **** 	
 479:../Sources/TFC/TFC_ADC.c **** 
 480:../Sources/TFC/TFC_ADC.c **** 	
 481:../Sources/TFC/TFC_ADC.c **** }
 695              		.loc 1 481 0
 696 0056 BD46     		mov	sp, r7
 697              		@ sp needed for prologue
 698 0058 80BD     		pop	{r7, pc}
 699              	.L14:
 700 005a C046     		.align	2
 701              	.L13:
 702 005c 00000000 		.word	CurrentADC_State
 703 0060 00700440 		.word	1074032640
 704 0064 3C100000 		.word	4156
 705 0068 50C30000 		.word	50000
 706 006c 00700340 		.word	1073967104
 707              		.cfi_endproc
 708              	.LFE4:
 710              		.section	.text.PIT_IRQHandler,"ax",%progbits
 711              		.align	2
 712              		.global	PIT_IRQHandler
 713              		.code	16
 714              		.thumb_func
 716              	PIT_IRQHandler:
 717              	.LFB5:
 482:../Sources/TFC/TFC_ADC.c **** 
 483:../Sources/TFC/TFC_ADC.c **** void PIT_IRQHandler()
 484:../Sources/TFC/TFC_ADC.c **** {
 718              		.loc 1 484 0
 719              		.cfi_startproc
 720 0000 80B5     		push	{r7, lr}
 721              	.LCFI14:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 00AF     		add	r7, sp, #0
 726              	.LCFI15:
 727              		.cfi_def_cfa_register 7
 485:../Sources/TFC/TFC_ADC.c **** 	PIT_TFLG0 = PIT_TFLG_TIF_MASK; //Turn off the Pit 0 Irq flag 
 728              		.loc 1 485 0
 729 0004 0A4A     		ldr	r2, .L16
 730 0006 8623     		mov	r3, #134
 731 0008 5B00     		lsl	r3, r3, #1
 732 000a 0121     		mov	r1, #1
 733 000c D150     		str	r1, [r2, r3]
 486:../Sources/TFC/TFC_ADC.c **** 	
 487:../Sources/TFC/TFC_ADC.c **** 	TAOS_SI_HIGH;
 734              		.loc 1 487 0
 735 000e 094B     		ldr	r3, .L16+4
 736 0010 8022     		mov	r2, #128
 737 0012 5A60     		str	r2, [r3, #4]
 488:../Sources/TFC/TFC_ADC.c **** 	//Prime the ADC pump and start capturing POT 0
 489:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State = ADC_STATE_CAPTURE_POT_0;
 738              		.loc 1 489 0
 739 0014 084B     		ldr	r3, .L16+8
 740 0016 0122     		mov	r2, #1
 741 0018 1A70     		strb	r2, [r3]
 490:../Sources/TFC/TFC_ADC.c **** 	
 491:../Sources/TFC/TFC_ADC.c **** 	ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 742              		.loc 1 491 0
 743 001a 084B     		ldr	r3, .L16+12
 744 001c 074A     		ldr	r2, .L16+12
 745 001e D268     		ldr	r2, [r2, #12]
 746 0020 1021     		mov	r1, #16
 747 0022 8A43     		bic	r2, r1
 748 0024 DA60     		str	r2, [r3, #12]
 492:../Sources/TFC/TFC_ADC.c **** 	ADC0_SC1A  =  TFC_POT_0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;  //Start the State machine at POT0
 749              		.loc 1 492 0
 750 0026 054B     		ldr	r3, .L16+12
 751 0028 4D22     		mov	r2, #77
 752 002a 1A60     		str	r2, [r3]
 493:../Sources/TFC/TFC_ADC.c **** }
 753              		.loc 1 493 0
 754 002c BD46     		mov	sp, r7
 755              		@ sp needed for prologue
 756 002e 80BD     		pop	{r7, pc}
 757              	.L17:
 758              		.align	2
 759              	.L16:
 760 0030 00700340 		.word	1073967104
 761 0034 C0F00F40 		.word	1074786496
 762 0038 00000000 		.word	CurrentADC_State
 763 003c 00B00340 		.word	1073983488
 764              		.cfi_endproc
 765              	.LFE5:
 767              		.section	.text.ADC0_IRQHandler,"ax",%progbits
 768              		.align	2
 769              		.global	ADC0_IRQHandler
 770              		.code	16
 771              		.thumb_func
 773              	ADC0_IRQHandler:
 774              	.LFB6:
 494:../Sources/TFC/TFC_ADC.c **** 
 495:../Sources/TFC/TFC_ADC.c **** 
 496:../Sources/TFC/TFC_ADC.c **** 
 497:../Sources/TFC/TFC_ADC.c **** void ADC0_IRQHandler()
 498:../Sources/TFC/TFC_ADC.c **** {
 775              		.loc 1 498 0
 776              		.cfi_startproc
 777 0000 80B5     		push	{r7, lr}
 778              	.LCFI16:
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 82B0     		sub	sp, sp, #8
 783              	.LCFI17:
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              	.LCFI18:
 787              		.cfi_def_cfa_register 7
 499:../Sources/TFC/TFC_ADC.c **** 	uint8_t Junk;
 500:../Sources/TFC/TFC_ADC.c **** 	switch(CurrentADC_State)
 788              		.loc 1 500 0
 789 0006 864B     		ldr	r3, .L40
 790 0008 1B78     		ldrb	r3, [r3]
 791 000a 062B     		cmp	r3, #6
 792 000c 04D8     		bhi	.L19
 793 000e 9A00     		lsl	r2, r3, #2
 794 0010 844B     		ldr	r3, .L40+4
 795 0012 D318     		add	r3, r2, r3
 796 0014 1B68     		ldr	r3, [r3]
 797 0016 9F46     		mov	pc, r3
 798              		.section	.rodata.ADC0_IRQHandler,"a",%progbits
 799              		.align	2
 800              	.L26:
 801 0000 18000000 		.word	.L19
 802 0004 22000000 		.word	.L20
 803 0008 46000000 		.word	.L21
 804 000c 6A000000 		.word	.L22
 805 0010 8E000000 		.word	.L23
 806 0014 B2000000 		.word	.L24
 807 0018 08010000 		.word	.L25
 808              		.section	.text.ADC0_IRQHandler
 809              	.L19:
 501:../Sources/TFC/TFC_ADC.c **** 	{
 502:../Sources/TFC/TFC_ADC.c **** 		default:
 503:../Sources/TFC/TFC_ADC.c **** 			Junk =  ADC0_RA;
 810              		.loc 1 503 0
 811 0018 834B     		ldr	r3, .L40+8
 812 001a 1A69     		ldr	r2, [r3, #16]
 813 001c FB1D     		add	r3, r7, #7
 814 001e 1A70     		strb	r2, [r3]
 504:../Sources/TFC/TFC_ADC.c **** 		break;
 815              		.loc 1 504 0
 816 0020 FAE0     		b	.L18
 817              	.L20:
 505:../Sources/TFC/TFC_ADC.c **** 		
 506:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_POT_0:
 507:../Sources/TFC/TFC_ADC.c **** 				
 508:../Sources/TFC/TFC_ADC.c **** 				PotADC_Value[0] = ADC0_RA;
 818              		.loc 1 508 0
 819 0022 814B     		ldr	r3, .L40+8
 820 0024 1B69     		ldr	r3, [r3, #16]
 821 0026 9AB2     		uxth	r2, r3
 822 0028 804B     		ldr	r3, .L40+12
 823 002a 1A80     		strh	r2, [r3]
 509:../Sources/TFC/TFC_ADC.c **** 				
 510:../Sources/TFC/TFC_ADC.c **** 				
 511:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 824              		.loc 1 511 0
 825 002c 7E4B     		ldr	r3, .L40+8
 826 002e 7E4A     		ldr	r2, .L40+8
 827 0030 D268     		ldr	r2, [r2, #12]
 828 0032 1021     		mov	r1, #16
 829 0034 8A43     		bic	r2, r1
 830 0036 DA60     		str	r2, [r3, #12]
 512:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_POT_1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 831              		.loc 1 512 0
 832 0038 7B4B     		ldr	r3, .L40+8
 833 003a 4C22     		mov	r2, #76
 834 003c 1A60     		str	r2, [r3]
 513:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_POT_1;
 835              		.loc 1 513 0
 836 003e 784B     		ldr	r3, .L40
 837 0040 0222     		mov	r2, #2
 838 0042 1A70     		strb	r2, [r3]
 514:../Sources/TFC/TFC_ADC.c **** 				
 515:../Sources/TFC/TFC_ADC.c **** 			break;
 839              		.loc 1 515 0
 840 0044 E8E0     		b	.L18
 841              	.L21:
 516:../Sources/TFC/TFC_ADC.c **** 		
 517:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_POT_1:
 518:../Sources/TFC/TFC_ADC.c **** 		
 519:../Sources/TFC/TFC_ADC.c **** 				PotADC_Value[1] = ADC0_RA;
 842              		.loc 1 519 0
 843 0046 784B     		ldr	r3, .L40+8
 844 0048 1B69     		ldr	r3, [r3, #16]
 845 004a 9AB2     		uxth	r2, r3
 846 004c 774B     		ldr	r3, .L40+12
 847 004e 5A80     		strh	r2, [r3, #2]
 520:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 848              		.loc 1 520 0
 849 0050 754B     		ldr	r3, .L40+8
 850 0052 754A     		ldr	r2, .L40+8
 851 0054 D268     		ldr	r2, [r2, #12]
 852 0056 1021     		mov	r1, #16
 853 0058 0A43     		orr	r2, r1
 854 005a DA60     		str	r2, [r3, #12]
 521:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_BAT_SENSE_CHANNEL| ADC_SC1_AIEN_MASK;
 855              		.loc 1 521 0
 856 005c 724B     		ldr	r3, .L40+8
 857 005e 4422     		mov	r2, #68
 858 0060 1A60     		str	r2, [r3]
 522:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_BATTERY_LEVEL;
 859              		.loc 1 522 0
 860 0062 6F4B     		ldr	r3, .L40
 861 0064 0322     		mov	r2, #3
 862 0066 1A70     		strb	r2, [r3]
 523:../Sources/TFC/TFC_ADC.c **** 				
 524:../Sources/TFC/TFC_ADC.c **** 			break;
 863              		.loc 1 524 0
 864 0068 D6E0     		b	.L18
 865              	.L22:
 525:../Sources/TFC/TFC_ADC.c **** 		
 526:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_BATTERY_LEVEL:
 527:../Sources/TFC/TFC_ADC.c **** 			
 528:../Sources/TFC/TFC_ADC.c **** 				BatSenseADC_Value = ADC0_RA;
 866              		.loc 1 528 0
 867 006a 6F4B     		ldr	r3, .L40+8
 868 006c 1B69     		ldr	r3, [r3, #16]
 869 006e 9AB2     		uxth	r2, r3
 870 0070 6F4B     		ldr	r3, .L40+16
 871 0072 1A80     		strh	r2, [r3]
 529:../Sources/TFC/TFC_ADC.c **** 				
 530:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 872              		.loc 1 530 0
 873 0074 6C4B     		ldr	r3, .L40+8
 874 0076 6C4A     		ldr	r2, .L40+8
 875 0078 D268     		ldr	r2, [r2, #12]
 876 007a 1021     		mov	r1, #16
 877 007c 8A43     		bic	r2, r1
 878 007e DA60     		str	r2, [r3, #12]
 531:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_HBRIDGE_FB_A_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 879              		.loc 1 531 0
 880 0080 694B     		ldr	r3, .L40+8
 881 0082 4722     		mov	r2, #71
 882 0084 1A60     		str	r2, [r3]
 532:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_HBRIDGE_A;
 883              		.loc 1 532 0
 884 0086 664B     		ldr	r3, .L40
 885 0088 0422     		mov	r2, #4
 886 008a 1A70     		strb	r2, [r3]
 533:../Sources/TFC/TFC_ADC.c **** 				
 534:../Sources/TFC/TFC_ADC.c **** 				break;
 887              		.loc 1 534 0
 888 008c C4E0     		b	.L18
 889              	.L23:
 535:../Sources/TFC/TFC_ADC.c **** 				
 536:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_HBRIDGE_A:	
 537:../Sources/TFC/TFC_ADC.c **** 			
 538:../Sources/TFC/TFC_ADC.c **** 				HBridge_Value[0] = ADC0_RA;
 890              		.loc 1 538 0
 891 008e 664B     		ldr	r3, .L40+8
 892 0090 1B69     		ldr	r3, [r3, #16]
 893 0092 9AB2     		uxth	r2, r3
 894 0094 674B     		ldr	r3, .L40+20
 895 0096 1A80     		strh	r2, [r3]
 539:../Sources/TFC/TFC_ADC.c **** 						
 540:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 896              		.loc 1 540 0
 897 0098 634B     		ldr	r3, .L40+8
 898 009a 634A     		ldr	r2, .L40+8
 899 009c D268     		ldr	r2, [r2, #12]
 900 009e 1021     		mov	r1, #16
 901 00a0 8A43     		bic	r2, r1
 902 00a2 DA60     		str	r2, [r3, #12]
 541:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_HBRIDGE_FB_B_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 903              		.loc 1 541 0
 904 00a4 604B     		ldr	r3, .L40+8
 905 00a6 4322     		mov	r2, #67
 906 00a8 1A60     		str	r2, [r3]
 542:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_HBRIDGE_B;
 907              		.loc 1 542 0
 908 00aa 5D4B     		ldr	r3, .L40
 909 00ac 0522     		mov	r2, #5
 910 00ae 1A70     		strb	r2, [r3]
 543:../Sources/TFC/TFC_ADC.c **** 				
 544:../Sources/TFC/TFC_ADC.c **** 				break;
 911              		.loc 1 544 0
 912 00b0 B2E0     		b	.L18
 913              	.L24:
 545:../Sources/TFC/TFC_ADC.c **** 			
 546:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_HBRIDGE_B:	
 547:../Sources/TFC/TFC_ADC.c **** 			
 548:../Sources/TFC/TFC_ADC.c **** 				HBridge_Value[1] = ADC0_RA;
 914              		.loc 1 548 0
 915 00b2 5D4B     		ldr	r3, .L40+8
 916 00b4 1B69     		ldr	r3, [r3, #16]
 917 00b6 9AB2     		uxth	r2, r3
 918 00b8 5E4B     		ldr	r3, .L40+20
 919 00ba 5A80     		strh	r2, [r3, #2]
 549:../Sources/TFC/TFC_ADC.c **** 			
 550:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_LINE_SCAN;
 920              		.loc 1 550 0
 921 00bc 584B     		ldr	r3, .L40
 922 00be 0622     		mov	r2, #6
 923 00c0 1A70     		strb	r2, [r3]
 551:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 924              		.loc 1 551 0
 925 00c2 594B     		ldr	r3, .L40+8
 926 00c4 584A     		ldr	r2, .L40+8
 927 00c6 D268     		ldr	r2, [r2, #12]
 928 00c8 1021     		mov	r1, #16
 929 00ca 0A43     		orr	r2, r1
 930 00cc DA60     		str	r2, [r3, #12]
 552:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 931              		.loc 1 552 0
 932 00ce 564B     		ldr	r3, .L40+8
 933 00d0 4622     		mov	r2, #70
 934 00d2 1A60     		str	r2, [r3]
 553:../Sources/TFC/TFC_ADC.c **** 				
 554:../Sources/TFC/TFC_ADC.c **** 				
 555:../Sources/TFC/TFC_ADC.c **** 				//Now we will start the sequence for the Linescan camera
 556:../Sources/TFC/TFC_ADC.c **** 				
 557:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_HIGH;
 935              		.loc 1 557 0
 936 00d4 584B     		ldr	r3, .L40+24
 937 00d6 0222     		mov	r2, #2
 938 00d8 5A60     		str	r2, [r3, #4]
 558:../Sources/TFC/TFC_ADC.c **** 				
 559:../Sources/TFC/TFC_ADC.c **** 				for(Junk = 0;Junk<50;Junk++)
 939              		.loc 1 559 0
 940 00da FB1D     		add	r3, r7, #7
 941 00dc 0022     		mov	r2, #0
 942 00de 1A70     		strb	r2, [r3]
 943 00e0 04E0     		b	.L28
 944              	.L29:
 945              		.loc 1 559 0 is_stmt 0
 946 00e2 FB1D     		add	r3, r7, #7
 947 00e4 FA1D     		add	r2, r7, #7
 948 00e6 1278     		ldrb	r2, [r2]
 949 00e8 0132     		add	r2, r2, #1
 950 00ea 1A70     		strb	r2, [r3]
 951              	.L28:
 952              		.loc 1 559 0
 953 00ec FB1D     		add	r3, r7, #7
 954 00ee 1B78     		ldrb	r3, [r3]
 955 00f0 312B     		cmp	r3, #49
 956 00f2 F6D9     		bls	.L29
 560:../Sources/TFC/TFC_ADC.c **** 				{
 561:../Sources/TFC/TFC_ADC.c **** 				}
 562:../Sources/TFC/TFC_ADC.c **** 				
 563:../Sources/TFC/TFC_ADC.c **** 				TAOS_SI_LOW;
 957              		.loc 1 563 0 is_stmt 1
 958 00f4 514B     		ldr	r3, .L40+28
 959 00f6 8022     		mov	r2, #128
 960 00f8 9A60     		str	r2, [r3, #8]
 564:../Sources/TFC/TFC_ADC.c **** 
 565:../Sources/TFC/TFC_ADC.c **** 				
 566:../Sources/TFC/TFC_ADC.c **** 				CurrentLineScanPixel = 0;
 961              		.loc 1 566 0
 962 00fa 514B     		ldr	r3, .L40+32
 963 00fc 0022     		mov	r2, #0
 964 00fe 1A70     		strb	r2, [r3]
 567:../Sources/TFC/TFC_ADC.c **** 				CurrentLineScanChannel = 0;
 965              		.loc 1 567 0
 966 0100 504B     		ldr	r3, .L40+36
 967 0102 0022     		mov	r2, #0
 968 0104 1A70     		strb	r2, [r3]
 568:../Sources/TFC/TFC_ADC.c **** 			
 569:../Sources/TFC/TFC_ADC.c **** 				break;
 969              		.loc 1 569 0
 970 0106 87E0     		b	.L18
 971              	.L25:
 570:../Sources/TFC/TFC_ADC.c **** 			
 571:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_LINE_SCAN:
 572:../Sources/TFC/TFC_ADC.c **** 					
 573:../Sources/TFC/TFC_ADC.c **** 					if(CurrentLineScanPixel<128)
 972              		.loc 1 573 0
 973 0108 4D4B     		ldr	r3, .L40+32
 974 010a 1B78     		ldrb	r3, [r3]
 975 010c DBB2     		uxtb	r3, r3
 976 010e DBB2     		uxtb	r3, r3
 977 0110 5BB2     		sxtb	r3, r3
 978 0112 002B     		cmp	r3, #0
 979 0114 42DB     		blt	.L30
 574:../Sources/TFC/TFC_ADC.c **** 					{
 575:../Sources/TFC/TFC_ADC.c **** 						if(CurrentLineScanChannel == 0)
 980              		.loc 1 575 0
 981 0116 4B4B     		ldr	r3, .L40+36
 982 0118 1B78     		ldrb	r3, [r3]
 983 011a DBB2     		uxtb	r3, r3
 984 011c 002B     		cmp	r3, #0
 985 011e 11D1     		bne	.L31
 576:../Sources/TFC/TFC_ADC.c **** 						{
 577:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 986              		.loc 1 577 0
 987 0120 494B     		ldr	r3, .L40+40
 988 0122 1A68     		ldr	r2, [r3]
 989 0124 464B     		ldr	r3, .L40+32
 990 0126 1B78     		ldrb	r3, [r3]
 991 0128 DBB2     		uxtb	r3, r3
 992 012a 5B00     		lsl	r3, r3, #1
 993 012c D218     		add	r2, r2, r3
 994 012e 3E4B     		ldr	r3, .L40+8
 995 0130 1B69     		ldr	r3, [r3, #16]
 996 0132 9BB2     		uxth	r3, r3
 997 0134 1380     		strh	r3, [r2]
 578:../Sources/TFC/TFC_ADC.c **** 							ADC0_SC1A  =  TFC_LINESCAN1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 998              		.loc 1 578 0
 999 0136 3C4B     		ldr	r3, .L40+8
 1000 0138 4722     		mov	r2, #71
 1001 013a 1A60     		str	r2, [r3]
 579:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanChannel = 1;
 1002              		.loc 1 579 0
 1003 013c 414B     		ldr	r3, .L40+36
 1004 013e 0122     		mov	r2, #1
 1005 0140 1A70     		strb	r2, [r3]
 580:../Sources/TFC/TFC_ADC.c **** 							
 581:../Sources/TFC/TFC_ADC.c **** 						}
 582:../Sources/TFC/TFC_ADC.c **** 						else
 583:../Sources/TFC/TFC_ADC.c **** 						{
 584:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 585:../Sources/TFC/TFC_ADC.c **** 							ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 586:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanChannel = 0;
 587:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanPixel++;
 588:../Sources/TFC/TFC_ADC.c **** 							
 589:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_LOW;
 590:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 591:../Sources/TFC/TFC_ADC.c **** 									{
 592:../Sources/TFC/TFC_ADC.c **** 									}
 593:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_HIGH;
 594:../Sources/TFC/TFC_ADC.c **** 							
 595:../Sources/TFC/TFC_ADC.c **** 						}
 596:../Sources/TFC/TFC_ADC.c **** 						
 597:../Sources/TFC/TFC_ADC.c **** 					}
 598:../Sources/TFC/TFC_ADC.c **** 					else
 599:../Sources/TFC/TFC_ADC.c **** 					{
 600:../Sources/TFC/TFC_ADC.c **** 						// done with the capture sequence.  we can wait for the PIT0 IRQ to restart
 601:../Sources/TFC/TFC_ADC.c **** 					
 602:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_HIGH;
 603:../Sources/TFC/TFC_ADC.c **** 											
 604:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 605:../Sources/TFC/TFC_ADC.c **** 							{
 606:../Sources/TFC/TFC_ADC.c **** 							}
 607:../Sources/TFC/TFC_ADC.c **** 						
 608:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_LOW;
 609:../Sources/TFC/TFC_ADC.c **** 						CurrentADC_State = ADC_STATE_INIT;	 
 610:../Sources/TFC/TFC_ADC.c **** 						
 611:../Sources/TFC/TFC_ADC.c **** 						//swap the buffer
 612:../Sources/TFC/TFC_ADC.c **** 						
 613:../Sources/TFC/TFC_ADC.c **** 						if(LineScanWorkingBuffer == 0)
 614:../Sources/TFC/TFC_ADC.c **** 						{
 615:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 1;
 616:../Sources/TFC/TFC_ADC.c **** 							
 617:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 618:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 619:../Sources/TFC/TFC_ADC.c **** 							
 620:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[0][0];
 621:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[0][0];
 622:../Sources/TFC/TFC_ADC.c **** 						}
 623:../Sources/TFC/TFC_ADC.c **** 						else
 624:../Sources/TFC/TFC_ADC.c **** 						{
 625:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 0;
 626:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 627:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 628:../Sources/TFC/TFC_ADC.c **** 							
 629:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[1][0];
 630:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[1][0];
 631:../Sources/TFC/TFC_ADC.c **** 						}
 632:../Sources/TFC/TFC_ADC.c **** 						
 633:../Sources/TFC/TFC_ADC.c **** 						LineScanImageReady = TRUE;
 634:../Sources/TFC/TFC_ADC.c **** 					}
 635:../Sources/TFC/TFC_ADC.c **** 					
 636:../Sources/TFC/TFC_ADC.c **** 					break;
 1006              		.loc 1 636 0
 1007 0142 68E0     		b	.L39
 1008              	.L31:
 584:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 1009              		.loc 1 584 0
 1010 0144 414B     		ldr	r3, .L40+44
 1011 0146 1A68     		ldr	r2, [r3]
 1012 0148 3D4B     		ldr	r3, .L40+32
 1013 014a 1B78     		ldrb	r3, [r3]
 1014 014c DBB2     		uxtb	r3, r3
 1015 014e 5B00     		lsl	r3, r3, #1
 1016 0150 D218     		add	r2, r2, r3
 1017 0152 354B     		ldr	r3, .L40+8
 1018 0154 1B69     		ldr	r3, [r3, #16]
 1019 0156 9BB2     		uxth	r3, r3
 1020 0158 1380     		strh	r3, [r2]
 585:../Sources/TFC/TFC_ADC.c **** 							ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 1021              		.loc 1 585 0
 1022 015a 334B     		ldr	r3, .L40+8
 1023 015c 4622     		mov	r2, #70
 1024 015e 1A60     		str	r2, [r3]
 586:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanChannel = 0;
 1025              		.loc 1 586 0
 1026 0160 384B     		ldr	r3, .L40+36
 1027 0162 0022     		mov	r2, #0
 1028 0164 1A70     		strb	r2, [r3]
 587:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanPixel++;
 1029              		.loc 1 587 0
 1030 0166 364B     		ldr	r3, .L40+32
 1031 0168 1B78     		ldrb	r3, [r3]
 1032 016a DBB2     		uxtb	r3, r3
 1033 016c 0133     		add	r3, r3, #1
 1034 016e DAB2     		uxtb	r2, r3
 1035 0170 334B     		ldr	r3, .L40+32
 1036 0172 1A70     		strb	r2, [r3]
 589:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_LOW;
 1037              		.loc 1 589 0
 1038 0174 304B     		ldr	r3, .L40+24
 1039 0176 0222     		mov	r2, #2
 1040 0178 9A60     		str	r2, [r3, #8]
 590:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 1041              		.loc 1 590 0
 1042 017a FB1D     		add	r3, r7, #7
 1043 017c 0022     		mov	r2, #0
 1044 017e 1A70     		strb	r2, [r3]
 1045 0180 04E0     		b	.L33
 1046              	.L34:
 590:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 1047              		.loc 1 590 0 is_stmt 0
 1048 0182 FB1D     		add	r3, r7, #7
 1049 0184 FA1D     		add	r2, r7, #7
 1050 0186 1278     		ldrb	r2, [r2]
 1051 0188 0132     		add	r2, r2, #1
 1052 018a 1A70     		strb	r2, [r3]
 1053              	.L33:
 590:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 1054              		.loc 1 590 0
 1055 018c FB1D     		add	r3, r7, #7
 1056 018e 1B78     		ldrb	r3, [r3]
 1057 0190 312B     		cmp	r3, #49
 1058 0192 F6D9     		bls	.L34
 593:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_HIGH;
 1059              		.loc 1 593 0 is_stmt 1
 1060 0194 284B     		ldr	r3, .L40+24
 1061 0196 0222     		mov	r2, #2
 1062 0198 5A60     		str	r2, [r3, #4]
 1063              		.loc 1 636 0
 1064 019a 3CE0     		b	.L39
 1065              	.L30:
 602:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_HIGH;
 1066              		.loc 1 602 0
 1067 019c 264B     		ldr	r3, .L40+24
 1068 019e 0222     		mov	r2, #2
 1069 01a0 5A60     		str	r2, [r3, #4]
 604:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 1070              		.loc 1 604 0
 1071 01a2 FB1D     		add	r3, r7, #7
 1072 01a4 0022     		mov	r2, #0
 1073 01a6 1A70     		strb	r2, [r3]
 1074 01a8 04E0     		b	.L35
 1075              	.L36:
 604:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 1076              		.loc 1 604 0 is_stmt 0
 1077 01aa FB1D     		add	r3, r7, #7
 1078 01ac FA1D     		add	r2, r7, #7
 1079 01ae 1278     		ldrb	r2, [r2]
 1080 01b0 0132     		add	r2, r2, #1
 1081 01b2 1A70     		strb	r2, [r3]
 1082              	.L35:
 604:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 1083              		.loc 1 604 0
 1084 01b4 FB1D     		add	r3, r7, #7
 1085 01b6 1B78     		ldrb	r3, [r3]
 1086 01b8 312B     		cmp	r3, #49
 1087 01ba F6D9     		bls	.L36
 608:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_LOW;
 1088              		.loc 1 608 0 is_stmt 1
 1089 01bc 1E4B     		ldr	r3, .L40+24
 1090 01be 0222     		mov	r2, #2
 1091 01c0 9A60     		str	r2, [r3, #8]
 609:../Sources/TFC/TFC_ADC.c **** 						CurrentADC_State = ADC_STATE_INIT;	 
 1092              		.loc 1 609 0
 1093 01c2 174B     		ldr	r3, .L40
 1094 01c4 0022     		mov	r2, #0
 1095 01c6 1A70     		strb	r2, [r3]
 613:../Sources/TFC/TFC_ADC.c **** 						if(LineScanWorkingBuffer == 0)
 1096              		.loc 1 613 0
 1097 01c8 214B     		ldr	r3, .L40+48
 1098 01ca 1B78     		ldrb	r3, [r3]
 1099 01cc DBB2     		uxtb	r3, r3
 1100 01ce 002B     		cmp	r3, #0
 1101 01d0 0FD1     		bne	.L37
 615:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 1;
 1102              		.loc 1 615 0
 1103 01d2 1F4B     		ldr	r3, .L40+48
 1104 01d4 0122     		mov	r2, #1
 1105 01d6 1A70     		strb	r2, [r3]
 617:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 1106              		.loc 1 617 0
 1107 01d8 1B4B     		ldr	r3, .L40+40
 1108 01da 1E4A     		ldr	r2, .L40+52
 1109 01dc 1A60     		str	r2, [r3]
 618:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 1110              		.loc 1 618 0
 1111 01de 1B4B     		ldr	r3, .L40+44
 1112 01e0 1D4A     		ldr	r2, .L40+56
 1113 01e2 1A60     		str	r2, [r3]
 620:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[0][0];
 1114              		.loc 1 620 0
 1115 01e4 1D4B     		ldr	r3, .L40+60
 1116 01e6 1E4A     		ldr	r2, .L40+64
 1117 01e8 1A60     		str	r2, [r3]
 621:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[0][0];
 1118              		.loc 1 621 0
 1119 01ea 1E4B     		ldr	r3, .L40+68
 1120 01ec 1E4A     		ldr	r2, .L40+72
 1121 01ee 1A60     		str	r2, [r3]
 1122 01f0 0EE0     		b	.L38
 1123              	.L37:
 625:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 0;
 1124              		.loc 1 625 0
 1125 01f2 174B     		ldr	r3, .L40+48
 1126 01f4 0022     		mov	r2, #0
 1127 01f6 1A70     		strb	r2, [r3]
 626:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 1128              		.loc 1 626 0
 1129 01f8 134B     		ldr	r3, .L40+40
 1130 01fa 194A     		ldr	r2, .L40+64
 1131 01fc 1A60     		str	r2, [r3]
 627:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 1132              		.loc 1 627 0
 1133 01fe 134B     		ldr	r3, .L40+44
 1134 0200 194A     		ldr	r2, .L40+72
 1135 0202 1A60     		str	r2, [r3]
 629:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[1][0];
 1136              		.loc 1 629 0
 1137 0204 154B     		ldr	r3, .L40+60
 1138 0206 134A     		ldr	r2, .L40+52
 1139 0208 1A60     		str	r2, [r3]
 630:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[1][0];
 1140              		.loc 1 630 0
 1141 020a 164B     		ldr	r3, .L40+68
 1142 020c 124A     		ldr	r2, .L40+56
 1143 020e 1A60     		str	r2, [r3]
 1144              	.L38:
 633:../Sources/TFC/TFC_ADC.c **** 						LineScanImageReady = TRUE;
 1145              		.loc 1 633 0
 1146 0210 164B     		ldr	r3, .L40+76
 1147 0212 0122     		mov	r2, #1
 1148 0214 1A70     		strb	r2, [r3]
 1149              	.L39:
 1150              		.loc 1 636 0
 1151 0216 C046     		mov	r8, r8
 1152              	.L18:
 637:../Sources/TFC/TFC_ADC.c **** 
 638:../Sources/TFC/TFC_ADC.c **** 	}
 639:../Sources/TFC/TFC_ADC.c **** 
 640:../Sources/TFC/TFC_ADC.c **** }
 1153              		.loc 1 640 0
 1154 0218 BD46     		mov	sp, r7
 1155 021a 02B0     		add	sp, sp, #8
 1156              		@ sp needed for prologue
 1157 021c 80BD     		pop	{r7, pc}
 1158              	.L41:
 1159 021e C046     		.align	2
 1160              	.L40:
 1161 0220 00000000 		.word	CurrentADC_State
 1162 0224 00000000 		.word	.L26
 1163 0228 00B00340 		.word	1073983488
 1164 022c 00000000 		.word	PotADC_Value
 1165 0230 00000000 		.word	BatSenseADC_Value
 1166 0234 00000000 		.word	HBridge_Value
 1167 0238 00F10F40 		.word	1074786560
 1168 023c C0F00F40 		.word	1074786496
 1169 0240 00000000 		.word	CurrentLineScanPixel
 1170 0244 00000000 		.word	CurrentLineScanChannel
 1171 0248 00000000 		.word	LineScanImage0WorkingBuffer
 1172 024c 00000000 		.word	LineScanImage1WorkingBuffer
 1173 0250 00000000 		.word	LineScanWorkingBuffer
 1174 0254 00010000 		.word	LineScanImage0Buffer+256
 1175 0258 00010000 		.word	LineScanImage1Buffer+256
 1176 025c 00000000 		.word	LineScanImage0
 1177 0260 00000000 		.word	LineScanImage0Buffer
 1178 0264 00000000 		.word	LineScanImage1
 1179 0268 00000000 		.word	LineScanImage1Buffer
 1180 026c 00000000 		.word	LineScanImageReady
 1181              		.cfi_endproc
 1182              	.LFE6:
 1184              		.global	__aeabi_ui2f
 1185              		.global	__aeabi_f2d
 1186              		.global	__aeabi_ddiv
 1187              		.global	__aeabi_dadd
 1188              		.global	__aeabi_d2f
 1189              		.section	.text.TFC_ReadPot,"ax",%progbits
 1190              		.align	2
 1191              		.global	TFC_ReadPot
 1192              		.code	16
 1193              		.thumb_func
 1195              	TFC_ReadPot:
 1196              	.LFB7:
 641:../Sources/TFC/TFC_ADC.c **** 
 642:../Sources/TFC/TFC_ADC.c **** //Pot Reading is Scaled to return a value of -1.0 to 1.0
 643:../Sources/TFC/TFC_ADC.c **** float TFC_ReadPot(uint8_t Channel)
 644:../Sources/TFC/TFC_ADC.c **** {
 1197              		.loc 1 644 0
 1198              		.cfi_startproc
 1199 0000 90B5     		push	{r4, r7, lr}
 1200              	.LCFI19:
 1201              		.cfi_def_cfa_offset 12
 1202              		.cfi_offset 4, -12
 1203              		.cfi_offset 7, -8
 1204              		.cfi_offset 14, -4
 1205 0002 83B0     		sub	sp, sp, #12
 1206              	.LCFI20:
 1207              		.cfi_def_cfa_offset 24
 1208 0004 00AF     		add	r7, sp, #0
 1209              	.LCFI21:
 1210              		.cfi_def_cfa_register 7
 1211 0006 021C     		mov	r2, r0
 1212 0008 FB1D     		add	r3, r7, #7
 1213 000a 1A70     		strb	r2, [r3]
 645:../Sources/TFC/TFC_ADC.c ****     if(Channel == 0)
 1214              		.loc 1 645 0
 1215 000c FB1D     		add	r3, r7, #7
 1216 000e 1B78     		ldrb	r3, [r3]
 1217 0010 002B     		cmp	r3, #0
 1218 0012 21D1     		bne	.L43
 646:../Sources/TFC/TFC_ADC.c ****         return ((float)PotADC_Value[0]/-((float)ADC_MAX_CODE/2.0))+1.0;
 1219              		.loc 1 646 0
 1220 0014 284B     		ldr	r3, .L45+16
 1221 0016 1B88     		ldrh	r3, [r3]
 1222 0018 9BB2     		uxth	r3, r3
 1223 001a 181C     		mov	r0, r3
 1224 001c FFF7FEFF 		bl	__aeabi_ui2f
 1225 0020 031C     		add	r3, r0, #0
 1226 0022 181C     		add	r0, r3, #0
 1227 0024 FFF7FEFF 		bl	__aeabi_f2d
 1228 0028 031C     		mov	r3, r0
 1229 002a 0C1C     		mov	r4, r1
 1230 002c 181C     		mov	r0, r3
 1231 002e 211C     		mov	r1, r4
 1232 0030 1E4B     		ldr	r3, .L45+4
 1233 0032 1D4A     		ldr	r2, .L45
 1234 0034 FFF7FEFF 		bl	__aeabi_ddiv
 1235 0038 031C     		mov	r3, r0
 1236 003a 0C1C     		mov	r4, r1
 1237 003c 181C     		mov	r0, r3
 1238 003e 211C     		mov	r1, r4
 1239 0040 1B4A     		ldr	r2, .L45+8
 1240 0042 1C4B     		ldr	r3, .L45+12
 1241 0044 FFF7FEFF 		bl	__aeabi_dadd
 1242 0048 031C     		mov	r3, r0
 1243 004a 0C1C     		mov	r4, r1
 1244 004c 181C     		mov	r0, r3
 1245 004e 211C     		mov	r1, r4
 1246 0050 FFF7FEFF 		bl	__aeabi_d2f
 1247 0054 031C     		add	r3, r0, #0
 1248 0056 20E0     		b	.L44
 1249              	.L43:
 647:../Sources/TFC/TFC_ADC.c ****     else
 648:../Sources/TFC/TFC_ADC.c ****         return ((float)PotADC_Value[1]/-((float)ADC_MAX_CODE/2.0))+1.0;
 1250              		.loc 1 648 0
 1251 0058 174B     		ldr	r3, .L45+16
 1252 005a 5B88     		ldrh	r3, [r3, #2]
 1253 005c 9BB2     		uxth	r3, r3
 1254 005e 181C     		mov	r0, r3
 1255 0060 FFF7FEFF 		bl	__aeabi_ui2f
 1256 0064 031C     		add	r3, r0, #0
 1257 0066 181C     		add	r0, r3, #0
 1258 0068 FFF7FEFF 		bl	__aeabi_f2d
 1259 006c 031C     		mov	r3, r0
 1260 006e 0C1C     		mov	r4, r1
 1261 0070 181C     		mov	r0, r3
 1262 0072 211C     		mov	r1, r4
 1263 0074 0D4B     		ldr	r3, .L45+4
 1264 0076 0C4A     		ldr	r2, .L45
 1265 0078 FFF7FEFF 		bl	__aeabi_ddiv
 1266 007c 031C     		mov	r3, r0
 1267 007e 0C1C     		mov	r4, r1
 1268 0080 181C     		mov	r0, r3
 1269 0082 211C     		mov	r1, r4
 1270 0084 0A4A     		ldr	r2, .L45+8
 1271 0086 0B4B     		ldr	r3, .L45+12
 1272 0088 FFF7FEFF 		bl	__aeabi_dadd
 1273 008c 031C     		mov	r3, r0
 1274 008e 0C1C     		mov	r4, r1
 1275 0090 181C     		mov	r0, r3
 1276 0092 211C     		mov	r1, r4
 1277 0094 FFF7FEFF 		bl	__aeabi_d2f
 1278 0098 031C     		add	r3, r0, #0
 1279              	.L44:
 649:../Sources/TFC/TFC_ADC.c **** }
 1280              		.loc 1 649 0
 1281 009a 181C     		add	r0, r3, #0
 1282 009c BD46     		mov	sp, r7
 1283 009e 03B0     		add	sp, sp, #12
 1284              		@ sp needed for prologue
 1285 00a0 90BD     		pop	{r4, r7, pc}
 1286              	.L46:
 1287 00a2 C046C046 		.align	3
 1287      C046
 1288              	.L45:
 1289 00a8 00000000 		.word	0
 1290 00ac 00FE9FC0 		.word	-1063256576
 1291 00b0 00000000 		.word	0
 1292 00b4 0000F03F 		.word	1072693248
 1293 00b8 00000000 		.word	PotADC_Value
 1294              		.cfi_endproc
 1295              	.LFE7:
 1297              		.global	__aeabi_fdiv
 1298              		.global	__aeabi_dmul
 1299 00bc C046C046 		.section	.text.TFC_ReadBatteryVoltage,"ax",%progbits
 1300              		.align	2
 1301              		.global	TFC_ReadBatteryVoltage
 1302              		.code	16
 1303              		.thumb_func
 1305              	TFC_ReadBatteryVoltage:
 1306              	.LFB8:
 650:../Sources/TFC/TFC_ADC.c **** 
 651:../Sources/TFC/TFC_ADC.c **** float TFC_ReadBatteryVoltage()
 652:../Sources/TFC/TFC_ADC.c **** {
 1307              		.loc 1 652 0
 1308              		.cfi_startproc
 1309 0000 98B5     		push	{r3, r4, r7, lr}
 1310              	.LCFI22:
 1311              		.cfi_def_cfa_offset 16
 1312              		.cfi_offset 3, -16
 1313              		.cfi_offset 4, -12
 1314              		.cfi_offset 7, -8
 1315              		.cfi_offset 14, -4
 1316 0002 00AF     		add	r7, sp, #0
 1317              	.LCFI23:
 1318              		.cfi_def_cfa_register 7
 653:../Sources/TFC/TFC_ADC.c ****     return (((float)BatSenseADC_Value/(float)(ADC_MAX_CODE)) * 3.3 * 5.7);
 1319              		.loc 1 653 0
 1320 0004 184B     		ldr	r3, .L49+16
 1321 0006 1B88     		ldrh	r3, [r3]
 1322 0008 9BB2     		uxth	r3, r3
 1323 000a 181C     		mov	r0, r3
 1324 000c FFF7FEFF 		bl	__aeabi_ui2f
 1325 0010 031C     		add	r3, r0, #0
 1326 0012 181C     		add	r0, r3, #0
 1327 0014 1549     		ldr	r1, .L49+20
 1328 0016 FFF7FEFF 		bl	__aeabi_fdiv
 1329 001a 031C     		add	r3, r0, #0
 1330 001c 181C     		add	r0, r3, #0
 1331 001e FFF7FEFF 		bl	__aeabi_f2d
 1332 0022 031C     		mov	r3, r0
 1333 0024 0C1C     		mov	r4, r1
 1334 0026 181C     		mov	r0, r3
 1335 0028 211C     		mov	r1, r4
 1336 002a 0C4B     		ldr	r3, .L49+4
 1337 002c 0A4A     		ldr	r2, .L49
 1338 002e FFF7FEFF 		bl	__aeabi_dmul
 1339 0032 031C     		mov	r3, r0
 1340 0034 0C1C     		mov	r4, r1
 1341 0036 181C     		mov	r0, r3
 1342 0038 211C     		mov	r1, r4
 1343 003a 094A     		ldr	r2, .L49+8
 1344 003c 094B     		ldr	r3, .L49+12
 1345 003e FFF7FEFF 		bl	__aeabi_dmul
 1346 0042 031C     		mov	r3, r0
 1347 0044 0C1C     		mov	r4, r1
 1348 0046 181C     		mov	r0, r3
 1349 0048 211C     		mov	r1, r4
 1350 004a FFF7FEFF 		bl	__aeabi_d2f
 1351 004e 031C     		add	r3, r0, #0
 654:../Sources/TFC/TFC_ADC.c **** }
 1352              		.loc 1 654 0
 1353 0050 181C     		add	r0, r3, #0
 1354 0052 BD46     		mov	sp, r7
 1355              		@ sp needed for prologue
 1356 0054 98BD     		pop	{r3, r4, r7, pc}
 1357              	.L50:
 1358 0056 C046     		.align	3
 1359              	.L49:
 1360 0058 66666666 		.word	1717986918
 1361 005c 66660A40 		.word	1074423398
 1362 0060 CDCCCCCC 		.word	-858993459
 1363 0064 CCCC1640 		.word	1075236044
 1364 0068 00000000 		.word	BatSenseADC_Value
 1365 006c 00F07F45 		.word	1166012416
 1366              		.cfi_endproc
 1367              	.LFE8:
 1369              		.section	.text.TFC_ReadHBridgeFeedBack,"ax",%progbits
 1370              		.align	2
 1371              		.global	TFC_ReadHBridgeFeedBack
 1372              		.code	16
 1373              		.thumb_func
 1375              	TFC_ReadHBridgeFeedBack:
 1376              	.LFB9:
 655:../Sources/TFC/TFC_ADC.c **** 
 656:../Sources/TFC/TFC_ADC.c **** float TFC_ReadHBridgeFeedBack(uint8_t Channel) 
 657:../Sources/TFC/TFC_ADC.c **** {
 1377              		.loc 1 657 0
 1378              		.cfi_startproc
 1379 0000 90B5     		push	{r4, r7, lr}
 1380              	.LCFI24:
 1381              		.cfi_def_cfa_offset 12
 1382              		.cfi_offset 4, -12
 1383              		.cfi_offset 7, -8
 1384              		.cfi_offset 14, -4
 1385 0002 83B0     		sub	sp, sp, #12
 1386              	.LCFI25:
 1387              		.cfi_def_cfa_offset 24
 1388 0004 00AF     		add	r7, sp, #0
 1389              	.LCFI26:
 1390              		.cfi_def_cfa_register 7
 1391 0006 021C     		mov	r2, r0
 1392 0008 FB1D     		add	r3, r7, #7
 1393 000a 1A70     		strb	r2, [r3]
 658:../Sources/TFC/TFC_ADC.c ****     if(Channel == 0)
 1394              		.loc 1 658 0
 1395 000c FB1D     		add	r3, r7, #7
 1396 000e 1B78     		ldrb	r3, [r3]
 1397 0010 002B     		cmp	r3, #0
 1398 0012 2ED1     		bne	.L52
 659:../Sources/TFC/TFC_ADC.c ****         return (float)HBridge_Value[0] / (float)ADC_MAX_CODE * 3.3 * 375.0 / 220.0;
 1399              		.loc 1 659 0
 1400 0014 364B     		ldr	r3, .L54+24
 1401 0016 1B88     		ldrh	r3, [r3]
 1402 0018 9BB2     		uxth	r3, r3
 1403 001a 181C     		mov	r0, r3
 1404 001c FFF7FEFF 		bl	__aeabi_ui2f
 1405 0020 031C     		add	r3, r0, #0
 1406 0022 181C     		add	r0, r3, #0
 1407 0024 3349     		ldr	r1, .L54+28
 1408 0026 FFF7FEFF 		bl	__aeabi_fdiv
 1409 002a 031C     		add	r3, r0, #0
 1410 002c 181C     		add	r0, r3, #0
 1411 002e FFF7FEFF 		bl	__aeabi_f2d
 1412 0032 031C     		mov	r3, r0
 1413 0034 0C1C     		mov	r4, r1
 1414 0036 181C     		mov	r0, r3
 1415 0038 211C     		mov	r1, r4
 1416 003a 284B     		ldr	r3, .L54+4
 1417 003c 264A     		ldr	r2, .L54
 1418 003e FFF7FEFF 		bl	__aeabi_dmul
 1419 0042 031C     		mov	r3, r0
 1420 0044 0C1C     		mov	r4, r1
 1421 0046 181C     		mov	r0, r3
 1422 0048 211C     		mov	r1, r4
 1423 004a 254A     		ldr	r2, .L54+8
 1424 004c 254B     		ldr	r3, .L54+12
 1425 004e FFF7FEFF 		bl	__aeabi_dmul
 1426 0052 031C     		mov	r3, r0
 1427 0054 0C1C     		mov	r4, r1
 1428 0056 181C     		mov	r0, r3
 1429 0058 211C     		mov	r1, r4
 1430 005a 234A     		ldr	r2, .L54+16
 1431 005c 234B     		ldr	r3, .L54+20
 1432 005e FFF7FEFF 		bl	__aeabi_ddiv
 1433 0062 031C     		mov	r3, r0
 1434 0064 0C1C     		mov	r4, r1
 1435 0066 181C     		mov	r0, r3
 1436 0068 211C     		mov	r1, r4
 1437 006a FFF7FEFF 		bl	__aeabi_d2f
 1438 006e 031C     		add	r3, r0, #0
 1439 0070 2DE0     		b	.L53
 1440              	.L52:
 660:../Sources/TFC/TFC_ADC.c ****     else
 661:../Sources/TFC/TFC_ADC.c ****     	return (float)HBridge_Value[1] / (float)ADC_MAX_CODE * 3.3 * 375.0 / 220.0;
 1441              		.loc 1 661 0
 1442 0072 1F4B     		ldr	r3, .L54+24
 1443 0074 5B88     		ldrh	r3, [r3, #2]
 1444 0076 9BB2     		uxth	r3, r3
 1445 0078 181C     		mov	r0, r3
 1446 007a FFF7FEFF 		bl	__aeabi_ui2f
 1447 007e 031C     		add	r3, r0, #0
 1448 0080 181C     		add	r0, r3, #0
 1449 0082 1C49     		ldr	r1, .L54+28
 1450 0084 FFF7FEFF 		bl	__aeabi_fdiv
 1451 0088 031C     		add	r3, r0, #0
 1452 008a 181C     		add	r0, r3, #0
 1453 008c FFF7FEFF 		bl	__aeabi_f2d
 1454 0090 031C     		mov	r3, r0
 1455 0092 0C1C     		mov	r4, r1
 1456 0094 181C     		mov	r0, r3
 1457 0096 211C     		mov	r1, r4
 1458 0098 104B     		ldr	r3, .L54+4
 1459 009a 0F4A     		ldr	r2, .L54
 1460 009c FFF7FEFF 		bl	__aeabi_dmul
 1461 00a0 031C     		mov	r3, r0
 1462 00a2 0C1C     		mov	r4, r1
 1463 00a4 181C     		mov	r0, r3
 1464 00a6 211C     		mov	r1, r4
 1465 00a8 0D4A     		ldr	r2, .L54+8
 1466 00aa 0E4B     		ldr	r3, .L54+12
 1467 00ac FFF7FEFF 		bl	__aeabi_dmul
 1468 00b0 031C     		mov	r3, r0
 1469 00b2 0C1C     		mov	r4, r1
 1470 00b4 181C     		mov	r0, r3
 1471 00b6 211C     		mov	r1, r4
 1472 00b8 0B4A     		ldr	r2, .L54+16
 1473 00ba 0C4B     		ldr	r3, .L54+20
 1474 00bc FFF7FEFF 		bl	__aeabi_ddiv
 1475 00c0 031C     		mov	r3, r0
 1476 00c2 0C1C     		mov	r4, r1
 1477 00c4 181C     		mov	r0, r3
 1478 00c6 211C     		mov	r1, r4
 1479 00c8 FFF7FEFF 		bl	__aeabi_d2f
 1480 00cc 031C     		add	r3, r0, #0
 1481              	.L53:
 662:../Sources/TFC/TFC_ADC.c **** }
 1482              		.loc 1 662 0
 1483 00ce 181C     		add	r0, r3, #0
 1484 00d0 BD46     		mov	sp, r7
 1485 00d2 03B0     		add	sp, sp, #12
 1486              		@ sp needed for prologue
 1487 00d4 90BD     		pop	{r4, r7, pc}
 1488              	.L55:
 1489 00d6 C046     		.align	3
 1490              	.L54:
 1491 00d8 66666666 		.word	1717986918
 1492 00dc 66660A40 		.word	1074423398
 1493 00e0 00000000 		.word	0
 1494 00e4 00707740 		.word	1081569280
 1495 00e8 00000000 		.word	0
 1496 00ec 00806B40 		.word	1080786944
 1497 00f0 00000000 		.word	HBridge_Value
 1498 00f4 00F07F45 		.word	1166012416
 1499              		.cfi_endproc
 1500              	.LFE9:
 1502              		.text
 1503              	.Letext0:
 1504              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 1505              		.file 3 "H:/git2/FRDM-TFC/Project_Headers/MKL25Z4.h"
 1506              		.file 4 "H:/git2/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TFC_ADC.c
                            *COM*:00000004 PotADC_Value
                            *COM*:00000004 HBridge_Value
                            *COM*:00000002 BatSenseADC_Value
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:23     .bss.CurrentADC_State:00000000 CurrentADC_State
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:24     .bss.CurrentADC_State:00000000 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:29     .bss.CurrentLineScanPixel:00000000 CurrentLineScanPixel
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:30     .bss.CurrentLineScanPixel:00000000 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:35     .bss.CurrentLineScanChannel:00000000 CurrentLineScanChannel
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:36     .bss.CurrentLineScanChannel:00000000 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:38     .text.ADC_Cal:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:43     .text.ADC_Cal:00000000 ADC_Cal
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:310    .text.ADC_Cal:000001b0 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:315    .text.ADC_Config_Alt:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:320    .text.ADC_Config_Alt:00000000 ADC_Config_Alt
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:394    .text.ADC_Read_Cal:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:399    .text.ADC_Read_Cal:00000000 ADC_Read_Cal
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:527    .text.InitADC0:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:532    .text.InitADC0:00000000 InitADC0
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:625    .text.InitADC0:00000084 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:632    .text.TFC_InitADCs:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:637    .text.TFC_InitADCs:00000000 TFC_InitADCs
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:702    .text.TFC_InitADCs:0000005c $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:711    .text.PIT_IRQHandler:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:716    .text.PIT_IRQHandler:00000000 PIT_IRQHandler
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:760    .text.PIT_IRQHandler:00000030 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:768    .text.ADC0_IRQHandler:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:773    .text.ADC0_IRQHandler:00000000 ADC0_IRQHandler
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:799    .rodata.ADC0_IRQHandler:00000000 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1161   .text.ADC0_IRQHandler:00000220 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1190   .text.TFC_ReadPot:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1195   .text.TFC_ReadPot:00000000 TFC_ReadPot
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1289   .text.TFC_ReadPot:000000a8 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1300   .text.TFC_ReadBatteryVoltage:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1305   .text.TFC_ReadBatteryVoltage:00000000 TFC_ReadBatteryVoltage
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1360   .text.TFC_ReadBatteryVoltage:00000058 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1370   .text.TFC_ReadHBridgeFeedBack:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1375   .text.TFC_ReadHBridgeFeedBack:00000000 TFC_ReadHBridgeFeedBack
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1491   .text.TFC_ReadHBridgeFeedBack:000000d8 $d
                     .debug_frame:00000010 $d
C:\Users\p746\AppData\Local\Temp\ccyIzAAt.s:1299   .text.TFC_ReadPot:000000bc $t

UNDEFINED SYMBOLS
disable_irq
TFC_SetLineScanExposureTime
enable_irq
LineScanImage0WorkingBuffer
LineScanImage1WorkingBuffer
LineScanWorkingBuffer
LineScanImage0Buffer
LineScanImage1Buffer
LineScanImage0
LineScanImage1
LineScanImageReady
__aeabi_ui2f
__aeabi_f2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
__aeabi_fdiv
__aeabi_dmul
