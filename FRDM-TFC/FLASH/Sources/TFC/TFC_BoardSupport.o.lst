   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TFC_BoardSupport.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TFC_InitGPIO,"ax",%progbits
  18              		.align	2
  19              		.global	TFC_InitGPIO
  20              		.code	16
  21              		.thumb_func
  23              	TFC_InitGPIO:
  24              	.LFB0:
  25              		.file 1 "../Sources/TFC/TFC_BoardSupport.c"
   1:../Sources/TFC/TFC_BoardSupport.c **** #include "TFC\TFC.h"
   2:../Sources/TFC/TFC_BoardSupport.c **** 
   3:../Sources/TFC/TFC_BoardSupport.c **** 
   4:../Sources/TFC/TFC_BoardSupport.c **** //set I/O for H-BRIDGE enables, switches and LEDs
   5:../Sources/TFC/TFC_BoardSupport.c **** void TFC_InitGPIO()
   6:../Sources/TFC/TFC_BoardSupport.c **** {
  26              		.loc 1 6 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
   7:../Sources/TFC/TFC_BoardSupport.c **** 	//enable Clocks to all ports
   8:../Sources/TFC/TFC_BoardSupport.c **** 	
   9:../Sources/TFC/TFC_BoardSupport.c **** 	SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_
  36              		.loc 1 9 0
  37 0004 284A     		ldr	r2, .L2
  38 0006 2849     		ldr	r1, .L2
  39 0008 284B     		ldr	r3, .L2+4
  40 000a CB58     		ldr	r3, [r1, r3]
  41 000c F821     		mov	r1, #248
  42 000e 8901     		lsl	r1, r1, #6
  43 0010 1943     		orr	r1, r3
  44 0012 264B     		ldr	r3, .L2+4
  45 0014 D150     		str	r1, [r2, r3]
  10:../Sources/TFC/TFC_BoardSupport.c **** 
  11:../Sources/TFC/TFC_BoardSupport.c **** 	//Setup Pins as GPIO
  12:../Sources/TFC/TFC_BoardSupport.c **** 	PORTE_PCR21 = PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK;   
  46              		.loc 1 12 0
  47 0016 264B     		ldr	r3, .L2+8
  48 0018 A022     		mov	r2, #160
  49 001a 5200     		lsl	r2, r2, #1
  50 001c 5A65     		str	r2, [r3, #84]
  13:../Sources/TFC/TFC_BoardSupport.c **** 	PORTE_PCR20 = PORT_PCR_MUX(1);    
  51              		.loc 1 13 0
  52 001e 244B     		ldr	r3, .L2+8
  53 0020 8022     		mov	r2, #128
  54 0022 5200     		lsl	r2, r2, #1
  55 0024 1A65     		str	r2, [r3, #80]
  14:../Sources/TFC/TFC_BoardSupport.c **** 	
  15:../Sources/TFC/TFC_BoardSupport.c **** 	//Port for Pushbuttons
  16:../Sources/TFC/TFC_BoardSupport.c **** 	PORTC_PCR13 = PORT_PCR_MUX(1);   
  56              		.loc 1 16 0
  57 0026 234B     		ldr	r3, .L2+12
  58 0028 8022     		mov	r2, #128
  59 002a 5200     		lsl	r2, r2, #1
  60 002c 5A63     		str	r2, [r3, #52]
  17:../Sources/TFC/TFC_BoardSupport.c **** 	PORTC_PCR17 = PORT_PCR_MUX(1);   
  61              		.loc 1 17 0
  62 002e 214B     		ldr	r3, .L2+12
  63 0030 8022     		mov	r2, #128
  64 0032 5200     		lsl	r2, r2, #1
  65 0034 5A64     		str	r2, [r3, #68]
  18:../Sources/TFC/TFC_BoardSupport.c **** 	
  19:../Sources/TFC/TFC_BoardSupport.c **** 	
  20:../Sources/TFC/TFC_BoardSupport.c **** 	//Ports for DIP Switches
  21:../Sources/TFC/TFC_BoardSupport.c **** 	PORTE_PCR2 = PORT_PCR_MUX(1); 
  66              		.loc 1 21 0
  67 0036 1E4B     		ldr	r3, .L2+8
  68 0038 8022     		mov	r2, #128
  69 003a 5200     		lsl	r2, r2, #1
  70 003c 9A60     		str	r2, [r3, #8]
  22:../Sources/TFC/TFC_BoardSupport.c **** 	PORTE_PCR3 = PORT_PCR_MUX(1);
  71              		.loc 1 22 0
  72 003e 1C4B     		ldr	r3, .L2+8
  73 0040 8022     		mov	r2, #128
  74 0042 5200     		lsl	r2, r2, #1
  75 0044 DA60     		str	r2, [r3, #12]
  23:../Sources/TFC/TFC_BoardSupport.c **** 	PORTE_PCR4 = PORT_PCR_MUX(1); 
  76              		.loc 1 23 0
  77 0046 1A4B     		ldr	r3, .L2+8
  78 0048 8022     		mov	r2, #128
  79 004a 5200     		lsl	r2, r2, #1
  80 004c 1A61     		str	r2, [r3, #16]
  24:../Sources/TFC/TFC_BoardSupport.c **** 	PORTE_PCR5 = PORT_PCR_MUX(1);
  81              		.loc 1 24 0
  82 004e 184B     		ldr	r3, .L2+8
  83 0050 8022     		mov	r2, #128
  84 0052 5200     		lsl	r2, r2, #1
  85 0054 5A61     		str	r2, [r3, #20]
  25:../Sources/TFC/TFC_BoardSupport.c **** 	
  26:../Sources/TFC/TFC_BoardSupport.c **** 	//Ports for LEDs
  27:../Sources/TFC/TFC_BoardSupport.c **** 	PORTB_PCR8 = PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK;   
  86              		.loc 1 27 0
  87 0056 184B     		ldr	r3, .L2+16
  88 0058 A022     		mov	r2, #160
  89 005a 5200     		lsl	r2, r2, #1
  90 005c 1A62     		str	r2, [r3, #32]
  28:../Sources/TFC/TFC_BoardSupport.c **** 	PORTB_PCR9 = PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK;   
  91              		.loc 1 28 0
  92 005e 164B     		ldr	r3, .L2+16
  93 0060 A022     		mov	r2, #160
  94 0062 5200     		lsl	r2, r2, #1
  95 0064 5A62     		str	r2, [r3, #36]
  29:../Sources/TFC/TFC_BoardSupport.c **** 	PORTB_PCR10 = PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK;   
  96              		.loc 1 29 0
  97 0066 144B     		ldr	r3, .L2+16
  98 0068 A022     		mov	r2, #160
  99 006a 5200     		lsl	r2, r2, #1
 100 006c 9A62     		str	r2, [r3, #40]
  30:../Sources/TFC/TFC_BoardSupport.c **** 	PORTB_PCR11 = PORT_PCR_MUX(1) | PORT_PCR_DSE_MASK;   
 101              		.loc 1 30 0
 102 006e 124B     		ldr	r3, .L2+16
 103 0070 A022     		mov	r2, #160
 104 0072 5200     		lsl	r2, r2, #1
 105 0074 DA62     		str	r2, [r3, #44]
  31:../Sources/TFC/TFC_BoardSupport.c **** 	
  32:../Sources/TFC/TFC_BoardSupport.c **** 	//Ports for accelerometer interrupts
  33:../Sources/TFC/TFC_BoardSupport.c **** 	PORTA_PCR14 = PORT_PCR_MUX(1) | PORT_PCR_IRQC(0xA) | PORT_PCR_PE_MASK | PORT_PCR_PS_MASK; //Set in
 106              		.loc 1 33 0
 107 0076 114B     		ldr	r3, .L2+20
 108 0078 114A     		ldr	r2, .L2+24
 109 007a 9A63     		str	r2, [r3, #56]
  34:../Sources/TFC/TFC_BoardSupport.c **** 	PORTA_PCR15 = PORT_PCR_MUX(1);
 110              		.loc 1 34 0
 111 007c 0F4B     		ldr	r3, .L2+20
 112 007e 8022     		mov	r2, #128
 113 0080 5200     		lsl	r2, r2, #1
 114 0082 DA63     		str	r2, [r3, #60]
  35:../Sources/TFC/TFC_BoardSupport.c **** 	
  36:../Sources/TFC/TFC_BoardSupport.c **** 	//Setup the output pins
  37:../Sources/TFC/TFC_BoardSupport.c ****     GPIOE_PDDR =  TFC_HBRIDGE_EN_LOC;  
 115              		.loc 1 37 0
 116 0084 0F4B     		ldr	r3, .L2+28
 117 0086 8022     		mov	r2, #128
 118 0088 9203     		lsl	r2, r2, #14
 119 008a 5A61     		str	r2, [r3, #20]
  38:../Sources/TFC/TFC_BoardSupport.c ****     GPIOB_PDDR =  TFC_BAT_LED0_LOC	| TFC_BAT_LED1_LOC | TFC_BAT_LED2_LOC | TFC_BAT_LED3_LOC;
 120              		.loc 1 38 0
 121 008c 0E4B     		ldr	r3, .L2+32
 122 008e F022     		mov	r2, #240
 123 0090 1201     		lsl	r2, r2, #4
 124 0092 5A61     		str	r2, [r3, #20]
  39:../Sources/TFC/TFC_BoardSupport.c **** 
  40:../Sources/TFC/TFC_BoardSupport.c ****     TFC_SetBatteryLED_Level(0);
 125              		.loc 1 40 0
 126 0094 0020     		mov	r0, #0
 127 0096 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  41:../Sources/TFC/TFC_BoardSupport.c ****     TFC_HBRIDGE_DISABLE;
 128              		.loc 1 41 0
 129 009a 0A4B     		ldr	r3, .L2+28
 130 009c 8022     		mov	r2, #128
 131 009e 9203     		lsl	r2, r2, #14
 132 00a0 9A60     		str	r2, [r3, #8]
  42:../Sources/TFC/TFC_BoardSupport.c ****     
  43:../Sources/TFC/TFC_BoardSupport.c **** }
 133              		.loc 1 43 0
 134 00a2 BD46     		mov	sp, r7
 135              		@ sp needed for prologue
 136 00a4 80BD     		pop	{r7, pc}
 137              	.L3:
 138 00a6 C046     		.align	2
 139              	.L2:
 140 00a8 00700440 		.word	1074032640
 141 00ac 38100000 		.word	4152
 142 00b0 00D00440 		.word	1074057216
 143 00b4 00B00440 		.word	1074049024
 144 00b8 00A00440 		.word	1074044928
 145 00bc 00900440 		.word	1074040832
 146 00c0 03010A00 		.word	655619
 147 00c4 00F10F40 		.word	1074786560
 148 00c8 40F00F40 		.word	1074786368
 149              		.cfi_endproc
 150              	.LFE0:
 152              		.section	.text.TFC_SetBatteryLED_Level,"ax",%progbits
 153              		.align	2
 154              		.global	TFC_SetBatteryLED_Level
 155              		.code	16
 156              		.thumb_func
 158              	TFC_SetBatteryLED_Level:
 159              	.LFB1:
  44:../Sources/TFC/TFC_BoardSupport.c **** 
  45:../Sources/TFC/TFC_BoardSupport.c **** 
  46:../Sources/TFC/TFC_BoardSupport.c **** void TFC_SetBatteryLED_Level(uint8_t BattLevel)
  47:../Sources/TFC/TFC_BoardSupport.c **** {
 160              		.loc 1 47 0
 161              		.cfi_startproc
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 16
 170 0004 00AF     		add	r7, sp, #0
 171              	.LCFI4:
 172              		.cfi_def_cfa_register 7
 173 0006 021C     		mov	r2, r0
 174 0008 FB1D     		add	r3, r7, #7
 175 000a 1A70     		strb	r2, [r3]
  48:../Sources/TFC/TFC_BoardSupport.c **** 	switch(BattLevel)
 176              		.loc 1 48 0
 177 000c FB1D     		add	r3, r7, #7
 178 000e 1B78     		ldrb	r3, [r3]
 179 0010 022B     		cmp	r3, #2
 180 0012 15D0     		beq	.L7
 181 0014 02DC     		bgt	.L10
 182 0016 012B     		cmp	r3, #1
 183 0018 09D0     		beq	.L6
 184 001a 03E0     		b	.L5
 185              	.L10:
 186 001c 032B     		cmp	r3, #3
 187 001e 18D0     		beq	.L8
 188 0020 042B     		cmp	r3, #4
 189 0022 1FD0     		beq	.L9
 190              	.L5:
  49:../Sources/TFC/TFC_BoardSupport.c **** 	{
  50:../Sources/TFC/TFC_BoardSupport.c **** 		default:
  51:../Sources/TFC/TFC_BoardSupport.c **** 		case 0:
  52:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PCOR = 0xF<<8;
 191              		.loc 1 52 0
 192 0024 134B     		ldr	r3, .L12
 193 0026 F022     		mov	r2, #240
 194 0028 1201     		lsl	r2, r2, #4
 195 002a 9A60     		str	r2, [r3, #8]
  53:../Sources/TFC/TFC_BoardSupport.c **** 		break;
 196              		.loc 1 53 0
 197 002c 1FE0     		b	.L4
 198              	.L6:
  54:../Sources/TFC/TFC_BoardSupport.c **** 	
  55:../Sources/TFC/TFC_BoardSupport.c **** 		case 1:
  56:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PSOR = 0x01<<8;
 199              		.loc 1 56 0
 200 002e 114B     		ldr	r3, .L12
 201 0030 8022     		mov	r2, #128
 202 0032 5200     		lsl	r2, r2, #1
 203 0034 5A60     		str	r2, [r3, #4]
  57:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PCOR = ~(0x01<<8) & (0xF<<8);
 204              		.loc 1 57 0
 205 0036 0F4B     		ldr	r3, .L12
 206 0038 E022     		mov	r2, #224
 207 003a 1201     		lsl	r2, r2, #4
 208 003c 9A60     		str	r2, [r3, #8]
  58:../Sources/TFC/TFC_BoardSupport.c **** 		break;
 209              		.loc 1 58 0
 210 003e 16E0     		b	.L4
 211              	.L7:
  59:../Sources/TFC/TFC_BoardSupport.c **** 		
  60:../Sources/TFC/TFC_BoardSupport.c **** 		case 2:
  61:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PSOR = 0x03<<8;
 212              		.loc 1 61 0
 213 0040 0C4B     		ldr	r3, .L12
 214 0042 C022     		mov	r2, #192
 215 0044 9200     		lsl	r2, r2, #2
 216 0046 5A60     		str	r2, [r3, #4]
  62:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PCOR = ~(0x03<<8) & (0xF<<8) ;
 217              		.loc 1 62 0
 218 0048 0A4B     		ldr	r3, .L12
 219 004a C022     		mov	r2, #192
 220 004c 1201     		lsl	r2, r2, #4
 221 004e 9A60     		str	r2, [r3, #8]
  63:../Sources/TFC/TFC_BoardSupport.c **** 		break;
 222              		.loc 1 63 0
 223 0050 0DE0     		b	.L4
 224              	.L8:
  64:../Sources/TFC/TFC_BoardSupport.c **** 		
  65:../Sources/TFC/TFC_BoardSupport.c **** 		case 3:
  66:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PSOR = 0x07<<8;
 225              		.loc 1 66 0
 226 0052 084B     		ldr	r3, .L12
 227 0054 E022     		mov	r2, #224
 228 0056 D200     		lsl	r2, r2, #3
 229 0058 5A60     		str	r2, [r3, #4]
  67:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PCOR = ~(0x07<<8) & (0xF<<8);
 230              		.loc 1 67 0
 231 005a 064B     		ldr	r3, .L12
 232 005c 8022     		mov	r2, #128
 233 005e 1201     		lsl	r2, r2, #4
 234 0060 9A60     		str	r2, [r3, #8]
  68:../Sources/TFC/TFC_BoardSupport.c **** 		break;
 235              		.loc 1 68 0
 236 0062 04E0     		b	.L4
 237              	.L9:
  69:../Sources/TFC/TFC_BoardSupport.c **** 		
  70:../Sources/TFC/TFC_BoardSupport.c **** 		case 4:
  71:../Sources/TFC/TFC_BoardSupport.c **** 			GPIOB_PSOR = 0x0F<<8;
 238              		.loc 1 71 0
 239 0064 034B     		ldr	r3, .L12
 240 0066 F022     		mov	r2, #240
 241 0068 1201     		lsl	r2, r2, #4
 242 006a 5A60     		str	r2, [r3, #4]
  72:../Sources/TFC/TFC_BoardSupport.c **** 		break;
 243              		.loc 1 72 0
 244 006c C046     		mov	r8, r8
 245              	.L4:
  73:../Sources/TFC/TFC_BoardSupport.c **** 		
  74:../Sources/TFC/TFC_BoardSupport.c **** 	}
  75:../Sources/TFC/TFC_BoardSupport.c **** }
 246              		.loc 1 75 0
 247 006e BD46     		mov	sp, r7
 248 0070 02B0     		add	sp, sp, #8
 249              		@ sp needed for prologue
 250 0072 80BD     		pop	{r7, pc}
 251              	.L13:
 252              		.align	2
 253              	.L12:
 254 0074 40F00F40 		.word	1074786368
 255              		.cfi_endproc
 256              	.LFE1:
 258              		.section	.text.TFC_GetDIP_Switch,"ax",%progbits
 259              		.align	2
 260              		.global	TFC_GetDIP_Switch
 261              		.code	16
 262              		.thumb_func
 264              	TFC_GetDIP_Switch:
 265              	.LFB2:
  76:../Sources/TFC/TFC_BoardSupport.c **** 
  77:../Sources/TFC/TFC_BoardSupport.c **** 
  78:../Sources/TFC/TFC_BoardSupport.c **** uint8_t TFC_GetDIP_Switch()
  79:../Sources/TFC/TFC_BoardSupport.c **** {
 266              		.loc 1 79 0
 267              		.cfi_startproc
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI5:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              	.LCFI6:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI7:
 278              		.cfi_def_cfa_register 7
  80:../Sources/TFC/TFC_BoardSupport.c **** 	uint8_t DIP_Val=0;
 279              		.loc 1 80 0
 280 0006 FB1D     		add	r3, r7, #7
 281 0008 0022     		mov	r2, #0
 282 000a 1A70     		strb	r2, [r3]
  81:../Sources/TFC/TFC_BoardSupport.c **** 	
  82:../Sources/TFC/TFC_BoardSupport.c **** 	DIP_Val = (GPIOE_PDIR>>2) & 0xF;
 283              		.loc 1 82 0
 284 000c 064B     		ldr	r3, .L16
 285 000e 1B69     		ldr	r3, [r3, #16]
 286 0010 9B08     		lsr	r3, r3, #2
 287 0012 D9B2     		uxtb	r1, r3
 288 0014 FB1D     		add	r3, r7, #7
 289 0016 0F22     		mov	r2, #15
 290 0018 0A40     		and	r2, r1
 291 001a 1A70     		strb	r2, [r3]
  83:../Sources/TFC/TFC_BoardSupport.c **** 
  84:../Sources/TFC/TFC_BoardSupport.c **** 	return DIP_Val;
 292              		.loc 1 84 0
 293 001c FB1D     		add	r3, r7, #7
 294 001e 1B78     		ldrb	r3, [r3]
  85:../Sources/TFC/TFC_BoardSupport.c **** }
 295              		.loc 1 85 0
 296 0020 181C     		mov	r0, r3
 297 0022 BD46     		mov	sp, r7
 298 0024 02B0     		add	sp, sp, #8
 299              		@ sp needed for prologue
 300 0026 80BD     		pop	{r7, pc}
 301              	.L17:
 302              		.align	2
 303              	.L16:
 304 0028 00F10F40 		.word	1074786560
 305              		.cfi_endproc
 306              	.LFE2:
 308              		.section	.text.TFC_GetAccelInterrupts,"ax",%progbits
 309              		.align	2
 310              		.global	TFC_GetAccelInterrupts
 311              		.code	16
 312              		.thumb_func
 314              	TFC_GetAccelInterrupts:
 315              	.LFB3:
  86:../Sources/TFC/TFC_BoardSupport.c **** 
  87:../Sources/TFC/TFC_BoardSupport.c **** uint8_t TFC_GetAccelInterrupts()
  88:../Sources/TFC/TFC_BoardSupport.c **** {
 316              		.loc 1 88 0
 317              		.cfi_startproc
 318 0000 80B5     		push	{r7, lr}
 319              	.LCFI8:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 82B0     		sub	sp, sp, #8
 324              	.LCFI9:
 325              		.cfi_def_cfa_offset 16
 326 0004 00AF     		add	r7, sp, #0
 327              	.LCFI10:
 328              		.cfi_def_cfa_register 7
  89:../Sources/TFC/TFC_BoardSupport.c **** 	uint8_t Interrupts_Val = 0;
 329              		.loc 1 89 0
 330 0006 FB1D     		add	r3, r7, #7
 331 0008 0022     		mov	r2, #0
 332 000a 1A70     		strb	r2, [r3]
  90:../Sources/TFC/TFC_BoardSupport.c **** 	
  91:../Sources/TFC/TFC_BoardSupport.c **** 	Interrupts_Val = (GPIOA_PDIR>>14);
 333              		.loc 1 91 0
 334 000c 084B     		ldr	r3, .L20
 335 000e 1B69     		ldr	r3, [r3, #16]
 336 0010 9A0B     		lsr	r2, r3, #14
 337 0012 FB1D     		add	r3, r7, #7
 338 0014 1A70     		strb	r2, [r3]
  92:../Sources/TFC/TFC_BoardSupport.c **** 	Interrupts_Val = Interrupts_Val & 0x3;
 339              		.loc 1 92 0
 340 0016 FB1D     		add	r3, r7, #7
 341 0018 FA1D     		add	r2, r7, #7
 342 001a 1178     		ldrb	r1, [r2]
 343 001c 0322     		mov	r2, #3
 344 001e 0A40     		and	r2, r1
 345 0020 1A70     		strb	r2, [r3]
  93:../Sources/TFC/TFC_BoardSupport.c **** 
  94:../Sources/TFC/TFC_BoardSupport.c **** 	return Interrupts_Val;
 346              		.loc 1 94 0
 347 0022 FB1D     		add	r3, r7, #7
 348 0024 1B78     		ldrb	r3, [r3]
  95:../Sources/TFC/TFC_BoardSupport.c **** }
 349              		.loc 1 95 0
 350 0026 181C     		mov	r0, r3
 351 0028 BD46     		mov	sp, r7
 352 002a 02B0     		add	sp, sp, #8
 353              		@ sp needed for prologue
 354 002c 80BD     		pop	{r7, pc}
 355              	.L21:
 356 002e C046     		.align	2
 357              	.L20:
 358 0030 00F00F40 		.word	1074786304
 359              		.cfi_endproc
 360              	.LFE3:
 362              		.text
 363              	.Letext0:
 364              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 365              		.file 3 "H:/git2/FRDM-TFC/Project_Headers/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TFC_BoardSupport.c
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:18     .text.TFC_InitGPIO:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:23     .text.TFC_InitGPIO:00000000 TFC_InitGPIO
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:158    .text.TFC_SetBatteryLED_Level:00000000 TFC_SetBatteryLED_Level
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:140    .text.TFC_InitGPIO:000000a8 $d
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:153    .text.TFC_SetBatteryLED_Level:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:254    .text.TFC_SetBatteryLED_Level:00000074 $d
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:259    .text.TFC_GetDIP_Switch:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:264    .text.TFC_GetDIP_Switch:00000000 TFC_GetDIP_Switch
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:304    .text.TFC_GetDIP_Switch:00000028 $d
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:309    .text.TFC_GetAccelInterrupts:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:314    .text.TFC_GetAccelInterrupts:00000000 TFC_GetAccelInterrupts
C:\Users\p746\AppData\Local\Temp\ccdK7yei.s:358    .text.TFC_GetAccelInterrupts:00000030 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
