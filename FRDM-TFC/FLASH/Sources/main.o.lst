   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  23              	main:
  24              	.LFB0:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** #include "Spices.h"
   4:../Sources/main.c **** #include "demo.h"
   5:../Sources/main.c **** #include "i2c.h"
   6:../Sources/main.c **** 
   7:../Sources/main.c **** 
   8:../Sources/main.c **** void Init_I2C();
   9:../Sources/main.c **** void Init_Accel();
  10:../Sources/main.c **** void Init_Interrupts();
  11:../Sources/main.c **** 
  12:../Sources/main.c **** int main(void) {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  13:../Sources/main.c **** 
  14:../Sources/main.c **** 	TFC_Init();
  36              		.loc 1 14 0
  37 0004 FFF7FEFF 		bl	TFC_Init
  15:../Sources/main.c **** 	Init_I2C();
  38              		.loc 1 15 0
  39 0008 FFF7FEFF 		bl	Init_I2C
  16:../Sources/main.c **** 	Init_Accel();
  40              		.loc 1 16 0
  41 000c FFF7FEFF 		bl	Init_Accel
  17:../Sources/main.c **** 	Init_Interrupts();
  42              		.loc 1 17 0
  43 0010 FFF7FEFF 		bl	Init_Interrupts
  18:../Sources/main.c **** 	Init_Demo();
  44              		.loc 1 18 0
  45 0014 FFF7FEFF 		bl	Init_Demo
  46              	.L4:
  19:../Sources/main.c **** 
  20:../Sources/main.c **** 	for(;;) {
  21:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  22:../Sources/main.c **** 		TFC_Task();
  47              		.loc 1 22 0
  48 0018 FFF7FEFF 		bl	TFC_Task
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 		if(TFC_GetDIP_Switch()&0x01) {
  49              		.loc 1 24 0
  50 001c FFF7FEFF 		bl	TFC_GetDIP_Switch
  51 0020 031C     		mov	r3, r0
  52 0022 1A1C     		mov	r2, r3
  53 0024 0123     		mov	r3, #1
  54 0026 1340     		and	r3, r2
  55 0028 02D0     		beq	.L2
  25:../Sources/main.c **** 			// Run MCP
  26:../Sources/main.c **** 			MasterControlProgram();
  56              		.loc 1 26 0
  57 002a FFF7FEFF 		bl	MasterControlProgram
  27:../Sources/main.c **** 		} else {
  28:../Sources/main.c **** 			// Run Demo Program
  29:../Sources/main.c **** 			DemoProgram();
  30:../Sources/main.c **** 		}
  31:../Sources/main.c **** 	}
  58              		.loc 1 31 0
  59 002e F3E7     		b	.L4
  60              	.L2:
  29:../Sources/main.c **** 			DemoProgram();
  61              		.loc 1 29 0
  62 0030 FFF7FEFF 		bl	DemoProgram
  63              		.loc 1 31 0
  64 0034 F0E7     		b	.L4
  65              		.cfi_endproc
  66              	.LFE0:
  68 0036 C046     		.section	.text.Init_Interrupts,"ax",%progbits
  69              		.align	2
  70              		.global	Init_Interrupts
  71              		.code	16
  72              		.thumb_func
  74              	Init_Interrupts:
  75              	.LFB1:
  32:../Sources/main.c **** 	return 0;
  33:../Sources/main.c **** }
  34:../Sources/main.c **** 
  35:../Sources/main.c **** void Init_Interrupts() {
  76              		.loc 1 35 0
  77              		.cfi_startproc
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 82B0     		sub	sp, sp, #8
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 7
  36:../Sources/main.c **** 	EnableInterrupts;
  89              		.loc 1 36 0
  90              	@ 36 "../Sources/main.c" 1
  91 0006 62B6     		 CPSIE i
  92              	@ 0 "" 2
  37:../Sources/main.c **** 	int irq_num = INT_PORTA - 16;   // enable IRQ on PORTA 
  93              		.loc 1 37 0
  94              		.code	16
  95 0008 1E23     		mov	r3, #30
  96 000a 7B60     		str	r3, [r7, #4]
  38:../Sources/main.c **** 	enable_irq(irq_num);
  97              		.loc 1 38 0
  98 000c 7B68     		ldr	r3, [r7, #4]
  99 000e 181C     		mov	r0, r3
 100 0010 FFF7FEFF 		bl	enable_irq
  39:../Sources/main.c **** 	//NVIC_ICPR |= 1 << irq_num;  //Clear any pending interrupts on PORTA
  40:../Sources/main.c **** 	//NVIC_ISER |= 1 << irq_num;  //Enable interrupts from PORTA
  41:../Sources/main.c **** 	//NVIC_IPR7 |= // Set interrupt priority
  42:../Sources/main.c **** }
 101              		.loc 1 42 0
 102 0014 BD46     		mov	sp, r7
 103 0016 02B0     		add	sp, sp, #8
 104              		@ sp needed for prologue
 105 0018 80BD     		pop	{r7, pc}
 106              		.cfi_endproc
 107              	.LFE1:
 109 001a C046     		.section	.text.PORTA_IRQHandler,"ax",%progbits
 110              		.align	2
 111              		.global	PORTA_IRQHandler
 112              		.code	16
 113              		.thumb_func
 115              	PORTA_IRQHandler:
 116              	.LFB2:
  43:../Sources/main.c **** 
  44:../Sources/main.c **** 
  45:../Sources/main.c **** 
  46:../Sources/main.c **** void PORTA_IRQHandler() {  
 117              		.loc 1 46 0
 118              		.cfi_startproc
 119 0000 80B5     		push	{r7, lr}
 120              	.LCFI5:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 00AF     		add	r7, sp, #0
 125              	.LCFI6:
 126              		.cfi_def_cfa_register 7
  47:../Sources/main.c **** 	PORTA_ISFR=0xFFFFFFFF;
 127              		.loc 1 47 0
 128 0004 0E4A     		ldr	r2, .L7
 129 0006 A023     		mov	r3, #160
 130 0008 0121     		mov	r1, #1
 131 000a 4942     		neg	r1, r1
 132 000c D150     		str	r1, [r2, r3]
  48:../Sources/main.c **** 	TFC_SetMotorPWM(0,0); //Make sure motors are off
 133              		.loc 1 48 0
 134 000e 0022     		mov	r2, #0
 135 0010 0023     		mov	r3, #0
 136 0012 101C     		add	r0, r2, #0
 137 0014 191C     		add	r1, r3, #0
 138 0016 FFF7FEFF 		bl	TFC_SetMotorPWM
  49:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 139              		.loc 1 49 0
 140 001a 0A4B     		ldr	r3, .L7+4
 141 001c 8022     		mov	r2, #128
 142 001e 9203     		lsl	r2, r2, #14
 143 0020 9A60     		str	r2, [r3, #8]
  50:../Sources/main.c **** 	TFC_BAT_LED0_ON;
 144              		.loc 1 50 0
 145 0022 094B     		ldr	r3, .L7+8
 146 0024 8022     		mov	r2, #128
 147 0026 5200     		lsl	r2, r2, #1
 148 0028 5A60     		str	r2, [r3, #4]
  51:../Sources/main.c **** 	I2CReadRegister(MMA8451_I2C_ADDRESS, INT_SOURCE);
 149              		.loc 1 51 0
 150 002a 1D20     		mov	r0, #29
 151 002c 0C21     		mov	r1, #12
 152 002e FFF7FEFF 		bl	I2CReadRegister
  52:../Sources/main.c **** 	I2CReadRegister(MMA8451_I2C_ADDRESS, PULSE_SRC);
 153              		.loc 1 52 0
 154 0032 1D20     		mov	r0, #29
 155 0034 2221     		mov	r1, #34
 156 0036 FFF7FEFF 		bl	I2CReadRegister
  53:../Sources/main.c **** } 
 157              		.loc 1 53 0
 158 003a BD46     		mov	sp, r7
 159              		@ sp needed for prologue
 160 003c 80BD     		pop	{r7, pc}
 161              	.L8:
 162 003e C046     		.align	2
 163              	.L7:
 164 0040 00900440 		.word	1074040832
 165 0044 00F10F40 		.word	1074786560
 166 0048 40F00F40 		.word	1074786368
 167              		.cfi_endproc
 168              	.LFE2:
 170              		.text
 171              	.Letext0:
 172              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 173              		.file 3 "H:/git2/FRDM-TFC/Project_Headers/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:18     .text.main:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:23     .text.main:00000000 main
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:74     .text.Init_Interrupts:00000000 Init_Interrupts
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:69     .text.Init_Interrupts:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:110    .text.PORTA_IRQHandler:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:115    .text.PORTA_IRQHandler:00000000 PORTA_IRQHandler
C:\Users\p746\AppData\Local\Temp\ccXN7yei.s:164    .text.PORTA_IRQHandler:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
Init_I2C
Init_Accel
Init_Demo
TFC_Task
TFC_GetDIP_Switch
MasterControlProgram
DemoProgram
enable_irq
TFC_SetMotorPWM
I2CReadRegister
