   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  23              	main:
  24              	.LFB0:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** #include "Spices.h"
   4:../Sources/main.c **** #include "demo.h"
   5:../Sources/main.c **** #include "i2c.h"
   6:../Sources/main.c **** 
   7:../Sources/main.c **** 
   8:../Sources/main.c **** void Init_I2C();
   9:../Sources/main.c **** signed int ReadShort(char * r);
  10:../Sources/main.c **** void Init_Accel();
  11:../Sources/main.c **** 
  12:../Sources/main.c **** int main(void) {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  13:../Sources/main.c **** 	
  14:../Sources/main.c **** 	TFC_Init();
  36              		.loc 1 14 0
  37 0004 FFF7FEFF 		bl	TFC_Init
  15:../Sources/main.c **** 	Init_I2C();
  38              		.loc 1 15 0
  39 0008 FFF7FEFF 		bl	Init_I2C
  16:../Sources/main.c **** 	Init_Accel();
  40              		.loc 1 16 0
  41 000c FFF7FEFF 		bl	Init_Accel
  17:../Sources/main.c **** 	Init_Demo();
  42              		.loc 1 17 0
  43 0010 FFF7FEFF 		bl	Init_Demo
  44              	.L4:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** 	for(;;) {
  20:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  21:../Sources/main.c **** 		TFC_Task();
  45              		.loc 1 21 0
  46 0014 FFF7FEFF 		bl	TFC_Task
  22:../Sources/main.c **** 
  23:../Sources/main.c **** 		if(TFC_GetDIP_Switch()&0x01) {
  47              		.loc 1 23 0
  48 0018 FFF7FEFF 		bl	TFC_GetDIP_Switch
  49 001c 031C     		mov	r3, r0
  50 001e 1A1C     		mov	r2, r3
  51 0020 0123     		mov	r3, #1
  52 0022 1340     		and	r3, r2
  53 0024 02D0     		beq	.L2
  24:../Sources/main.c **** 			// Run MCP
  25:../Sources/main.c **** 			MasterControlProgram();
  54              		.loc 1 25 0
  55 0026 FFF7FEFF 		bl	MasterControlProgram
  26:../Sources/main.c **** 		} else {
  27:../Sources/main.c **** 			// Run Demo Program
  28:../Sources/main.c **** 			DemoProgram();
  29:../Sources/main.c **** 		}
  30:../Sources/main.c **** 	}
  56              		.loc 1 30 0
  57 002a F3E7     		b	.L4
  58              	.L2:
  28:../Sources/main.c **** 			DemoProgram();
  59              		.loc 1 28 0
  60 002c FFF7FEFF 		bl	DemoProgram
  61              		.loc 1 30 0
  62 0030 F0E7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE0:
  66 0032 C046     		.text
  67              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\p746\AppData\Local\Temp\ccGPBq0r.s:18     .text.main:00000000 $t
C:\Users\p746\AppData\Local\Temp\ccGPBq0r.s:23     .text.main:00000000 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
Init_I2C
Init_Accel
Init_Demo
TFC_Task
TFC_GetDIP_Switch
MasterControlProgram
DemoProgram
